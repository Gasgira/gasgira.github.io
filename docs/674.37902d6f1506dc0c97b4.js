"use strict";(self.webpackChunkcylixguide=self.webpackChunkcylixguide||[]).push([[674],{558:(t,e,i)=>{i.r(e),i.d(e,{default:()=>o});var r=i(8081),s=i.n(r),n=i(3645),a=i.n(n)()(s());a.push([t.id,'.graph_container {\r\n\t/* height: 80vh;\r\n\twidth: 100vw; */\r\n\t/* height: calc(100vh - 4rem); */\r\n\tmax-height: 60vh;\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center\r\n}\r\n\r\n.graph_container .forge-canvas {\r\n\t\t/* background-color: red; */\r\n\t\theight: 100%;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n@media all and (display-mode: fullscreen) {\r\n  .graph_container {\r\n\t\tmax-height: calc(100vh - 3rem);\r\n  }\r\n}\r\n\r\n.graph_toolbar_container {\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tbackground-color: rgba(0,0,0,0.1)\r\n}\r\n\r\n.graph_toolbar_container .control_list {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\tflex-wrap: wrap;\r\n\t\talign-items: center;\r\n\t\tpadding-left: 0.5em\r\n\t}\r\n\r\n.graph_toolbar_container .control_list .hi-box {\r\n\t\t\tmargin: 0.25em 0.2em;\r\n\t\t}\r\n\r\n.graph_toolbar_container .control_list .spacer {\r\n\t\t\tmargin: 0 0.5rem;\r\n\t\t\tpointer-events: none;\r\n\t\t}\r\n\r\n.graph_toolbar_container .control_list .graph_start {\r\n\t\t\tmin-width: 9ch;\r\n\t\t\tjustify-content: center;\r\n\t\t}\r\n\r\n.litegraph.dialog {\r\n\tposition: absolute;\r\n\ttop: 50%;\r\n\tleft: 50%;\r\n\tmargin-top: -150px;\r\n\tmargin-left: -200px;\r\n\r\n\tbackground-color: #2A2A2A;\r\n\r\n\tmin-width: 400px;\r\n\tmin-height: 200px;\r\n\tbox-shadow: 0 0 4px #111;\r\n\tborder-radius: 6px\r\n}\r\n\r\n.litegraph.dialog.settings {\r\n\t\tleft: 10px;\r\n\t\ttop: 6rem;\r\n\t\tbottom: 2rem;\r\n\t\tmargin: auto;\r\n\t}\r\n\r\n.litegraph.dialog .close{\r\n\t\tfloat: right;\r\n\t\tmargin: 4px;\r\n\t\tmargin-right: 10px;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 1.4em\r\n\t}\r\n\r\n.litegraph.dialog .close:hover {\r\n\t\t\tcolor: white;\r\n\t\t}\r\n\r\n.litegraph.dialog .dialog-header {\r\n\t\tcolor: #AAA;\r\n\t\tborder-bottom: 1px solid #161616;\r\n\t\theight: 40px\r\n\t}\r\n\r\n.litegraph.dialog .dialog-header .dialog-title {\r\n\t\t\tfont: 20px "Arial";\r\n\t\t\tmargin: 4px;\r\n\t\t\tpadding: 4px 10px;\r\n\t\t\tdisplay: inline-block;\r\n\t\t}\r\n\r\n.litegraph.dialog .dialog-footer { height: 50px; padding: 10px; border-top: 1px solid #1a1a1a;}\r\n\r\n.litegraph.dialog .dialog-content {\r\n\t\theight: calc(100% - 90px);\r\n\t\twidth: 100%;\r\n\t\tmin-height: 100px;\r\n\t\tdisplay: inline-block;\r\n\t\tcolor: #AAA\r\n\t\t/*background-color: black;*/\r\n\t}\r\n\r\n.litegraph.dialog .dialog-content h3 {\r\n\t\t\tmargin: 10px;\r\n\t\t}\r\n\r\n.litegraph.dialog .dialog-content .connections {\r\n\t\t\tflex-direction: row\r\n\t\t}\r\n\r\n.litegraph.dialog .dialog-content .connections .connections_side {\r\n\t\t\t\twidth: calc(50% - 5px);\r\n\t\t\t\tmin-height: 100px;\r\n\t\t\t\tbackground-color: black;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t}\r\n\r\n.litegraph.dialog .node_type {\r\n\t\tfont-size: 1.2em;\r\n\t\tdisplay: block;\r\n\t\tmargin: 10px;\r\n\t}\r\n\r\n.litegraph.dialog .node_desc {\r\n\t\topacity: 0.5;\r\n\t\tdisplay: block;\r\n\t\tmargin: 10px;\r\n\t}\r\n\r\n.litegraph.dialog .separator {\r\n\t\tdisplay: block;\r\n\t\twidth: calc( 100% - 4px );\r\n\t\theight: 1px;\r\n\t\tborder-top: 1px solid #000;\r\n\t\tborder-bottom: 1px solid #333;\r\n\t\tmargin: 10px 2px;\r\n\t\tpadding: 0;\r\n\t}\r\n\r\n.litegraph.dialog .property {\r\n\t\tmargin-bottom: 2px;\r\n\t\tpadding: 4px\r\n\t}\r\n\r\n.litegraph.dialog .property .property_name {\r\n\t\t\tcolor: #737373;\r\n\t\t\tdisplay: inline-block;\r\n\t\t\ttext-align: left;\r\n\t\t\tvertical-align: top;\r\n\t\t\twidth: 120px;\r\n\t\t\tpadding-left: 4px;\r\n\t\t\toverflow: hidden;\r\n\t\t}\r\n\r\n.litegraph.dialog .property .property_value {\r\n\t\t\tdisplay: inline-block;\r\n\t\t\ttext-align: right;\r\n\t\t\tcolor: #AAA;\r\n\t\t\tbackground-color: #1A1A1A;\r\n\t\t\twidth: calc( 100% - 122px );\r\n\t\t\tmax-height: 300px;\r\n\t\t\tpadding: 4px;\r\n\t\t\tpadding-right: 12px;\r\n\t\t\toverflow: hidden;\r\n\t\t\tcursor: pointer;\r\n\t\t\tborder-radius: 3px\r\n\t\t}\r\n\r\n.litegraph.dialog .property .property_value:hover {\r\n\t\t\t\tcolor: white;\r\n\t\t\t}\r\n\r\n.litegraph.dialog .property.boolean .property_value {\r\n\t\t\tpadding-right: 30px;\r\n\t\t}\r\n\r\n.litegraph.dialog .btn {\r\n\t\tborder: 0;\r\n\t\tborder-radius: 4px;\r\n\t\tpadding: 4px 20px;\r\n\t\tmargin-left: 0px;\r\n\t\tbackground-color: #060606;\r\n\t\tcolor: #8e8e8e\r\n\t}\r\n\r\n.litegraph.dialog .btn:hover {\r\n\t\t\tbackground-color: #111;\r\n\t\t\tcolor: #FFF;\r\n\t\t}\r\n\r\n.litegraph.dialog .btn.delete:hover {\r\n\t\t\tbackground-color: #F33;\r\n\t\t\tcolor: black;\r\n\t\t}',""]);const o=a},3836:(t,e,i)=>{var r=i(3379),s=i.n(r),n=i(7795),a=i.n(n),o=i(569),u=i.n(o),p=i(3565),d=i.n(p),l=i(9216),c=i.n(l),h=i(4589),g=i.n(h),y=i(558),m={};m.styleTagTransform=g(),m.setAttributes=d(),m.insert=u().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=c();var S=s()(y.default,m);if(!y.default.locals||t.hot.invalidate){var E=!y.default.locals,O=E?y:y.default.locals;t.hot.accept(558,(e=>{y=i(558),function(t,e,i){if(!t&&e||t&&!e)return!1;var r;for(r in t)if((!i||"default"!==r)&&t[r]!==e[r])return!1;for(r in e)if(!(i&&"default"===r||t[r]))return!1;return!0}(O,E?y:y.default.locals,E)?(O=E?y:y.default.locals,S(y.default)):t.hot.invalidate()}))}t.hot.dispose((function(){S()}));y.default&&y.default.locals&&y.default.locals},5674:(t,e,i)=>{i.r(e),i.d(e,{Forge:()=>Re,forge:()=>Ve});var r=i(802),s=i(2165),n=i(7786),a=(i(6664),i(2842)),o=i.n(a);o().LiteGraph.allow_multi_output_for_events=!1,o().LiteGraph.node_box_coloured_by_mode=!0,o().LiteGraph.alt_drag_do_clone_nodes=!0,o().LiteGraph.release_link_on_empty_shows_menu=!0,o().LiteGraph.clearRegisteredTypes(),o().LiteGraph.NODE_TITLE_COLOR="#000",o().LiteGraph.NODE_SELECTED_TITLE_COLOR="#000",o().LiteGraph.NODE_DEFAULT_COLOR="#fff",o().LiteGraph.NODE_DEFAULT_BGCOLOR="#000",o().LiteGraph.NODE_TEXT_COLOR="#fff",o().LiteGraph.NODE_DEFAULT_BOXCOLOR="#000",o().LiteGraph.NODE_MODES_COLORS=["#fff","#aa8866","#000","#77ff77","red"];const u=o().LiteGraph,p={type:{audioZoneEffect:"audioZoneEffect",areaMonitor:"areaMonitor",boolean:"boolean",botDifficulty:"botDifficulty",deathContext:"deathContext",equipment:"equipment",equipmentType:"equipmentType",grenadeType:"grenadeType",number:"number",percent:"number",identifier:"identifier",player:"object",players:"array",position:"vec3",object:"object",objects:"array",string:"string",team:"team",uiMessage:"message",uiMessageTemplate:"messageTemplate",vector:"vec3",vehicle:"object",vehicleType:"vehicleType",weapon:"weapon",weaponType:"weaponType",weaponConfiguration:"weaponConfiguration",weaponAdditionMethod:"weaponAdditionMethod"},nodeColor:{event:"#c2dfe3",logic:"#fcfcfc",math:"#ebcfb2",object:"#d7dae5",variable:"#d4a0a7",gameMode:"#8bae9e",inventory:"#d4d6e3"},weaponTypes:new Map([]),equipmentTypes:new Map([["customEquipmentA","Custom Equipment A"]]),vehicleTypes:new Map([])};class d{constructor(t){this.properties={},t&&(this.properties={...t})}get isPlayer(){return!1}get isAlive(){return!0}get title(){return this?.properties?.title??"Object Reference"}get position(){return this._position??=[0,0,0]}get rotation(){return this._rotation??=[0,0,0]}get transform(){return{position:this.position,rotation:this.rotation}}get equipmentType(){return""}get team(){return 0}toJSON(){return{title:this.title}}toString(){return`${this.title}`}}class l extends d{constructor(t){super(),this.properties.title=t||"Player",this._crouching=!1,this._weapons=[],this._equipment=void 0}get isPlayer(){return!0}crouch(){console.log("[Player.crouch]",this),this._crouching=!this._crouching}get isCrouching(){return this?._crouching??!1}toJSON(){return`[PLAYER] ${this.title}`}toString(){return this.toJSON()}get equippedWeapon(){return this._weapons?.[0]}get unEquippedWeapon(){return this._weapons?.[1]}get equipment(){if(this._equipment)return this._equipment}}const c=new class{get defaultState(){return{players:[new l("Player0")],roundNumber:1,roundTimeLimit:600,maxRounds:1,scoreLimit:50}}get state(){return this._state??={...this.defaultState}}reset(){console.log("[Game] reset"),this._state={...this.defaultState},this.messenger.clearAll(),this.customEvents.clearAll(),this.customEventsGlobal.clearAll()}get messenger(){return this._messenger??=new s.v}get customEvents(){return this._customEvents??=new s.v}get customEventsGlobal(){return this._customEventsGlobal??=new s.v}get roundStartDate(){return this.state.roundStartDate??=new Date}get roundEndDate(){return this.state.roundEndDate??=new Date(new Date(this.roundStartDate).setSeconds(this.roundStartDate.getSeconds()+this.state.roundTimeLimit))}get roundSecondsElapsed(){const t=this.roundStartDate;return(new Date-t)/1e3}get roundSecondsRemaining(){return this.state.roundTimeLimit-this.roundSecondsElapsed}setRemainingTime(t){if(t<0)return;const e=new Date,i=new Date(new Date(e).setSeconds(e.getSeconds()+t));return this.state.roundEndDate=i,this.state.roundEndDate}setScoreToWin(t){t&&(this.state.scoreLimit=parseInt(t))}getTeamPointsTotal(t){return 0}getTeamPointsRound(t){return 0}get defaultPlayer(){return this.state.players[0]??new l}get randomPlayer(){return this.state.players[0]??new l}addPlayer(){const t=this.state.players.length;t<32&&this.state.players.push(new l("Player"+(t-1)))}removePlayer(t){}getPlayerPointsTotal(t){return 0}getPlayerPointsRound(t){return 0}getPersonalScoreTotal(t){return 0}getPersonalScoreRound(t){return 0}get pointsToWin(){return 1}get roundNumber(){return this.state.roundNumber}get maxRounds(){return this.state.maxRounds}endRound({endGame:t,condition:e,winner:i}){t?this.messenger.emit("gameEnd",e,i):(this.messenger.emit("roundEnd",this.state.roundNumber),this.state.roundNumber=this.state.roundNumber+1,this.messenger.emit("roundstart",this.state.roundNumber))}toJSON(){return this.state}toString(){return JSON.stringify(this.toJSON())}};class h{static get shape(){return u.BOX_SHAPE}get color(){return this._color??"red"}set color(t){t&&"string"==typeof t&&(this._color=t)}toString(){return this.title??"Node"}toJSON(){return this.title??"Node"}get staticInputs(){return this._staticInputs??=new Map}get staticOutputs(){return this._staticOutputs??=new Map}addStaticInput(t,e){this.staticInputs.set(t,e),this.addInput(t,e)}addStaticOutput(t,e){this.staticOutputs.set(t,e),this.addOutput(t,e)}}class g extends r.w{get logs(){return this._logs??=new Array}clear(){this._logs??=new Array}submit({level:t,message:e,caller:i}){this.logs.push({date:(new Date).toISOString(),level:t,message:`${e}`,caller:`${i}`})}log(t,e){void 0!==t&&void 0!==e&&this.submit({level:5,caller:t,message:e})}warn(t,e){void 0!==t&&void 0!==e&&this.submit({level:4,caller:t,message:e})}error(t,e){void 0!==t&&void 0!==e&&this.submit({level:3,caller:t,message:e})}}new g;class y extends r.w{constructor({nodes:t}){super(),console.log("learn",t),this.nodes=t,this.nodes.forEach(((t,e)=>{const i=t.category;t.title;this.nodeCategories.has(i)?this.nodeCategories.get(i).add(t):this.nodeCategories.set(i,new Set)}))}render(){return this.html`
			<div>
				hello ${this.nodeCategories.size}
			</div>
		`}get nodeCategories(){return this._nodeCategories??=new Map}}var m=i(4136),S=i(5959);class E extends h{constructor(){super(),this.color=p.nodeColor.event,this.properties={audio:""},this.addStaticInput("Event",u.ACTION),this.addStaticInput("Position",p.type.position),this.addStaticOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Play 3D Audio For All Players"}get title(){return E.title}onAction(){console.log("[Play3DAudioForAllPlayers]",{...this.properties}),this.triggerSlot(0)}}u.registerNodeType("audio/Play3DAudioForAllPlayers",E);class O extends h{constructor(){super(),this.color=p.nodeColor.event,this.properties={audio:"",team:0},this.addStaticInput("Event",u.ACTION),this.addStaticInput("Team",p.type.team),this.addStaticInput("Position",p.type.position),this.addStaticOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Play 3D Audio For Opposing Teams"}get title(){return O.title}onAction(){console.log("[Play3DAudioForOpposingTeams]",{...this.properties}),this.triggerSlot(0)}}u.registerNodeType("audio/Play3DAudioForOpposingTeams",O);class T extends h{constructor(){super(),this.color=p.nodeColor.event,this.properties={audio:"",team:0},this.addStaticInput("Event",u.ACTION),this.addStaticInput("Team",p.type.team),this.addStaticInput("Position",p.type.position),this.addStaticOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Play 3D Audio For Team"}get title(){return T.title}onAction(){console.log("[Play3DAudioForTeam]",{...this.properties}),this.triggerSlot(0)}}u.registerNodeType("audio/Play3DAudioForTeam",T);class v extends h{constructor(){super(),this.color=p.nodeColor.event,this.addStaticInput("Event",u.ACTION),this.addStaticInput("Area Monitor",p.type.areaMonitor),this.addStaticInput("Audio Zone Effect",p.type.audioZoneEffect),this.addStaticOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Register Audio Zone"}get title(){return v.title}onAction(){console.log("[RegisterAudioZone]"),this.triggerSlot(0)}}u.registerNodeType("audio/RegisterAudioZone",v);class N extends h{constructor(){super(),this.color=p.nodeColor.event,this.addStaticInput("Event",u.ACTION),this.addStaticInput("Area Monitor",p.type.areaMonitor),this.addStaticOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Unregister Audio Zone"}get title(){return N.title}onAction(){console.log("[UnregisterAudioZone]"),this.triggerSlot(0)}}u.registerNodeType("audio/UnregisterAudioZone",N);class b extends h{constructor(){super(),this.color=p.nodeColor.event,this.addStaticInput("Event",u.ACTION),this.addStaticInput("Object",p.type.object),this.addStaticInput("Play For Allies",p.type.boolean),this.addStaticOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Set Object 3D Audio Loop"}get title(){return b.title}onAction(){console.log("[SetObject3DAudioLoop]"),this.triggerSlot(0)}}u.registerNodeType("audio/SetObject3DAudioLoop",b);class I extends h{constructor(){super(),this.color=p.nodeColor.event,this.addStaticInput("Event",u.ACTION),this.addStaticInput("Object",p.type.object),this.addStaticInput("Stop For Allies",p.type.boolean),this.addStaticInput("Stop For Enemies",p.type.boolean),this.addStaticOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Stop Object 3D Audio Loop"}get title(){return I.title}onAction(){console.log("[StopObject3DAudioLoop]"),this.triggerSlot(0)}}u.registerNodeType("audio/StopObject3DAudioLoop",I);class f extends h{constructor(){super(),this.color=p.nodeColor.event,this.properties={botDifficulty:""},this.addStaticInput("Event",u.ACTION),this.addStaticInput("Bot Difficulty",p.type.botDifficulty),this.addStaticInput("Team",p.type.team),this.addStaticOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Add Bot"}get title(){return f.title}onAction(){console.log("[AddBot]",{...this.properties}),this.triggerSlot(0)}}u.registerNodeType("bots/AddBot",f);class x extends h{constructor(){super(),this.color=p.nodeColor.event,this.properties={botDifficulty:""},this.addStaticOutput("Bot Difficulty",p.type.botDifficulty)}static get title(){return"Bot Difficulty"}get title(){return x.title}onExecute(){}}u.registerNodeType("bots/BotDifficulty",x);class D extends h{constructor(){super(),this.color=p.nodeColor.event,this.properties={botDifficulty:""},this.addStaticInput("Bot Player",p.type.player),this.addStaticInput("Bot Difficulty",p.type.botDifficulty),this.addStaticOutput("Bot Is Difficulty",p.type.boolean)}static get title(){return"Get Bot Is Difficulty"}get title(){return D.title}onExecute(){}}u.registerNodeType("bots/GetBotIsDifficulty",D);class A extends h{constructor(){super(),this.color=p.nodeColor.event,this.addStaticInput("Event",u.ACTION),this.addStaticOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Remove All Bots"}get title(){return A.title}onAction(){console.log("[RemoveAllBots]"),this.triggerSlot(0)}}u.registerNodeType("bots/RemoveAllBots",A);class P extends h{constructor(){super(),this.color=p.nodeColor.event,this.addStaticInput("Event",u.ACTION),this.addStaticInput("Bot Player",p.type.player),this.addStaticOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Remove Specific Bot From Match"}get title(){return P.title}onAction(){console.log("[RemoveSpecificBotFromMatch]"),this.triggerSlot(0)}}u.registerNodeType("bots/RemoveSpecificBotFromMatch",P);u.registerNodeType("events/gameStart",class extends h{constructor(){super(),this.color=p.nodeColor.event,this.addStaticOutput("Event",u.ACTION),this.triggered=!1}static get title(){return"On Game Start"}onStart(){this.triggered=!1}onStop(){this.triggered=!1}onExecute(){this.triggered||this.triggerSlot(0),this.triggered=!0}});u.registerNodeType("events/OnGameplayStart",class extends h{constructor(){super(),this.properties={roundNumber:1},this.addStaticOutput("Event",u.ACTION),this.addStaticOutput("Round Number",p.type.number),this.color=p.nodeColor.event,this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Gameplay Start"}onTrigger(){this.setOutputData(1,this.properties.roundNumber),this.triggerSlot(0)}});u.registerNodeType("events/OnObjectDamaged",class extends h{constructor(){super(),this.properties={damageAmount:1,attackingObject:c.defaultPlayer},this.addStaticInput("Object",p.type.object),this.addStaticOutput("Event",u.EVENT),this.addStaticOutput("Attacking Object",p.type.object),this.addStaticOutput("Damage Amount",p.type.number),this.color=p.nodeColor.event,this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Object Damaged"}onTrigger(){this.setOutputData(1,this.properties.attackingObject),this.setOutputData(2,this.properties.damageAmount),this.triggerSlot(0)}});class w extends h{constructor(){super(),this.addStaticInput("Object",p.type.object),this.addStaticOutput("Event",u.EVENT),this.color=p.nodeColor.event,this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Object Destroyed"}get title(){return w.title}onTrigger(){this.triggerSlot(0)}}u.registerNodeType("events/OnObjectDestroyed",w);class _ extends h{constructor(){super(),this.color=p.nodeColor.event,this.addStaticInput("Area Monitor",p.type.areaMonitor),this.addStaticOutput("Event",u.EVENT),this.addStaticOutput("Object",p.type.object),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Object Entered Area"}get title(){return _.title}onTrigger(){this.triggerSlot(0)}}u.registerNodeType("events/OnObjectEnteredArea",_);class C extends h{constructor(){super(),this.color=p.nodeColor.event,this.addStaticInput("Area Monitor",p.type.areaMonitor),this.addStaticOutput("Event",u.EVENT),this.addStaticOutput("Object",p.type.object),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Object Exited Area"}get title(){return C.title}onTrigger(){this.triggerSlot(0)}}u.registerNodeType("events/OnObjectExitedArea",C);class G extends h{constructor(){super(),this.color=p.nodeColor.event,this.addStaticInput("Object",p.type.object),this.addStaticOutput("Event",u.EVENT),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Object Spawned"}get title(){return G.title}onTrigger(){this.triggerSlot(0)}}u.registerNodeType("events/OnObjectSpawned",G);class W extends h{constructor(){super(),this.color=p.nodeColor.event,this.addStaticOutput("Event",u.EVENT),this.addStaticOutput("Round Number",p.type.number),c.messenger.on("roundEnd",(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Round End"}get title(){return W.title}onTrigger(){this.setOutputData(1,c.state.roundNumber),this.triggerSlot(0)}}u.registerNodeType("events/OnRoundEnd",W);class R extends h{constructor(){super(),this.color=p.nodeColor.event,this.addStaticOutput("Event",u.EVENT),this.addStaticOutput("Round Number",p.type.number),c.messenger.on("roundStart",(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Round Start"}get title(){return R.title}onTrigger(){this.setOutputData(1,c.state.roundNumber),this.triggerSlot(0)}}u.registerNodeType("events/OnRoundStart",R);class V extends h{constructor(){super(),this.color=p.nodeColor.event,this.properties={enteringPlayer:c.defaultPlayer,vehicle:new d({title:"Vehicle"})},this.addStaticOutput("Event",u.EVENT),this.addStaticOutput("Entering Player",p.type.player),this.addStaticOutput("Vehicle",p.type.vehicle),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Vehicle Entered"}get title(){return V.title}onTrigger(){this.setOutputData(1,this.properties.enteringPlayer),this.setOutputData(2,this.properties.vehicle),this.triggerSlot(0)}}u.registerNodeType("events/OnVehicleEntered",V);class M extends h{constructor(){super(),this.color=p.nodeColor.event,this.properties={exitingPlayer:c.defaultPlayer,vehicle:new d({title:"Vehicle"})},this.addStaticOutput("Event",u.EVENT),this.addStaticOutput("Exiting Player",p.type.player),this.addStaticOutput("Vehicle",p.type.vehicle),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Vehicle Exited"}get title(){return M.title}onTrigger(){this.setOutputData(1,this.properties.exitingPlayer),this.setOutputData(2,this.properties.vehicle),this.triggerSlot(0)}}u.registerNodeType("events/OnVehicleExited",M);class j extends h{constructor(){super(),this.color=p.nodeColor.event,this.properties={enteringPlayer:c.defaultPlayer,vehicle:new d({title:"Vehicle"})},this.addStaticOutput("Event",u.EVENT),this.addStaticOutput("Entering Player",p.type.player),this.addStaticOutput("Vehicle",p.type.vehicle),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Vehicle Hijacked"}get title(){return j.title}onTrigger(){this.setOutputData(1,this.properties.enteringPlayer),this.setOutputData(2,this.properties.vehicle),this.triggerSlot(0)}}u.registerNodeType("events/OnVehicleHijacked",j);class q extends h{constructor(){super(),this.color=p.nodeColor.event,this.properties={evictedPlayer:c.defaultPlayer,vehicle:new d({title:"Vehicle"})},this.addStaticOutput("Event",u.EVENT),this.addStaticOutput("Evicted Player",p.type.player),this.addStaticOutput("Vehicle",p.type.vehicle),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Vehicle Hijacked"}get title(){return q.title}onTrigger(){this.setOutputData(1,this.properties.evictedPlayer),this.setOutputData(2,this.properties.vehicle),this.triggerSlot(0)}}u.registerNodeType("events/OnVehicleOverturned",q);class B extends h{constructor(){super(),this.color=p.nodeColor.event,this.properties={seconds:2,initialDelay:10},this.addStaticInput("Seconds",p.type.number),this.addStaticInput("Initial Delay",p.type.number),this.addStaticOutput("Event",u.EVENT),this.time=0,this.lastInterval=1,this.triggered=!1,this.delayAwaited=!(this.properties.initialDelay>0)}static get title(){return"Every N Seconds"}get title(){return B.title}onExecute(){u.allow_multi_output_for_events=!1,console.warn("events",u.allow_multi_output_for_events);const t=this.graph.elapsed_time,e=0==this.time,i=this.getInputData(0)??this.properties.seconds,r=this.getInputData(1)??this.properties.initialDelay;if(this.time+=t,this.lastInterval=i,!this.delayAwaited){if(this.time<r)return;this.delayAwaited=!0}!e&&(this.time<this.lastInterval||isNaN(this.lastInterval))||(this.triggered=!0,this.time=this.time%this.lastInterval,this.onTrigger())}onStart(){this.time=0}onTrigger(){this.triggerSlot(0)}}u.registerNodeType("eventsCustom/EveryNSeconds",B);u.registerNodeType("eventsCustom/OnCustomEquipmentUsed",class extends h{constructor(){super(),this.color=p.nodeColor.event,this.properties={player:c.defaultPlayer,equipmentType:p.equipmentTypes.get("customEquipmentA")},this.addStaticOutput("Event",u.EVENT),this.addStaticOutput("Activating Player",p.type.player),this.addStaticOutput("Equipment Type",p.type.equipmentType),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Custom Equipment Used"}onTrigger(){this.setOutputData(1,this.properties.player),this.setOutputData(2,this.properties.equipmentType),this.triggerSlot(0,!0)}});class L extends h{constructor(){super(),this.color=p.nodeColor.event,this.properties={identifier:"",customEvent:void 0},this.addStaticInput("Identifier",p.type.identifier),this.addStaticOutput("Event",u.EVENT),this.addStaticOutput("Object",p.type.object),this.addStaticOutput("Number",p.type.number),this.addStaticOutput("Object List",p.type.objects)}static get title(){return"On Custom Event"}get title(){return L.title}onExecute(){const t=this.getInputData(0)??this.properties.identifier;t?t!==this._identifier&&(this._customEvent&&c.customEvents.off(this._identifier,this._customEvent),this._identifier=t,this._customEvent=t=>{this.onTrigger(t)},c.customEvents.on(this._identifier,this._customEvent)):this._customEvent&&(c.customEvents.off(this._identifier,this._customEvent),this._customEvent=void 0,this._identifier=void 0)}onTrigger(t){this.setOutputData(1,t?.object),this.setOutputData(2,t?.number),this.setOutputData(3,t?.objectList),this.triggerSlot(0)}}u.registerNodeType("eventsCustom/OnCustomEvent",L);class k extends h{constructor(){super(),this.color=p.nodeColor.event,this.properties={identifier:""},this.addStaticInput("Event",u.ACTION),this.addStaticInput("Identifier",p.type.identifier),this.addStaticInput("Object",p.type.object),this.addStaticInput("Number",p.type.number),this.addStaticInput("Object List",p.type.objects),this.addStaticOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Trigger Custom Event"}get title(){return k.title}onAction(){const t=this.getInputData(1)??this.properties.identifier;if(t){const e={},i=this.getInputData(2);i&&(e.object=i);const r=this.getInputData(3);r&&(e.number=r);const s=this.getInputData(4);s&&(e.objectList=s),c.customEvents.emit(t,e),this.triggerSlot(0)}}}u.registerNodeType("eventsCustom/TriggerCustomEvent",k);const F=p.nodeColor.event;class $ extends h{constructor(){super(),this.properties={player:c.defaultPlayer,equipment:new d},this.addStaticOutput("Event",u.EVENT),this.addStaticOutput("Acquiring Player",p.type.player),this.addStaticOutput("Equipment Type",p.type.equipmentType),this.addStaticOutput("Equipment Position",p.type.position),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Equipment Pickup"}get title(){return $.title}get color(){return F}onTrigger(){this.setOutputData(1,this.properties.player),this.setOutputData(2,this.properties.equipment.equipmentType),this.setOutputData(3,this.properties.equipment.position),this.triggerSlot(0)}}u.registerNodeType("eventsInventory/OnEquipmentPickup",$);class U extends h{constructor(){super(),this.properties={player:c.defaultPlayer,equipment:new d},this.addStaticOutput("Event",u.EVENT),this.addStaticOutput("Activating Player",p.type.player),this.addStaticOutput("Equipment Type",p.type.equipmentType),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Equipment Used"}get title(){return U.title}get color(){return F}onTrigger(){this.setOutputData(1,this.properties.player),this.setOutputData(2,this.properties.equipment.equipmentType),this.triggerSlot(0)}}u.registerNodeType("eventsInventory/OnEquipmentUsed",U);class H extends h{constructor(){super(),this.properties={player:c.defaultPlayer,equipment:new d},this.addStaticOutput("Event",u.EVENT),this.addStaticOutput("Player",p.type.player),this.addStaticOutput("Grenade Type",p.type.equipmentType),this.addStaticOutput("Grenade Position",p.type.position),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Grenade Pickup"}get title(){return H.title}get color(){return F}onTrigger(){this.setOutputData(1,this.properties.player),this.setOutputData(2,this.properties.equipment.equipmentType),this.setOutputData(3,this.properties.equipment.position),this.triggerSlot(0)}}u.registerNodeType("eventsInventory/OnGrenadePickup",H);class z extends h{constructor(){super(),this.properties={player:c.defaultPlayer,equipment:new d},this.addStaticOutput("Event",u.EVENT),this.addStaticOutput("Player",p.type.player),this.addStaticOutput("Grenade Type",p.type.equipmentType),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Grenade Throw"}get title(){return z.title}get color(){return F}onTrigger(){this.setOutputData(1,this.properties.player),this.setOutputData(2,this.properties.equipment.equipmentType),this.triggerSlot(0)}}u.registerNodeType("eventsInventory/OnGrenadeThrow",z);class J extends h{constructor(){super(),this.properties={player:c.defaultPlayer,weapon:new d},this.addStaticOutput("Event",u.EVENT),this.addStaticOutput("Acquiring Player",p.type.player),this.addStaticOutput("Weapon",p.type.object),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Weapon Added"}get title(){return J.title}get color(){return F}onTrigger(){this.setOutputData(1,this.properties.player),this.setOutputData(2,this.properties.weapon),this.triggerSlot(0)}}u.registerNodeType("eventsInventory/OnWeaponAdded",J);class K extends h{constructor(){super(),this.properties={player:c.defaultPlayer,weapon:new d},this.addStaticOutput("Event",u.EVENT),this.addStaticOutput("Player",p.type.player),this.addStaticOutput("Weapon",p.type.object),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Weapon Dropped"}get title(){return K.title}get color(){return F}onTrigger(){this.setOutputData(1,this.properties.player),this.setOutputData(2,this.properties.weapon),this.triggerSlot(0)}}u.registerNodeType("eventsInventory/OnWeaponDropped",K);class Z extends h{constructor(){super(),this.properties={player:c.defaultPlayer,weapon:new d},this.addStaticOutput("Event",u.EVENT),this.addStaticOutput("Player",p.type.player),this.addStaticOutput("Weapon",p.type.object),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Weapon Low Ammo"}get title(){return Z.title}get color(){return F}onTrigger(){this.setOutputData(1,this.properties.player),this.setOutputData(2,this.properties.weapon),this.triggerSlot(0)}}u.registerNodeType("eventsInventory/OnWeaponLowAmmo",Z);class X extends h{constructor(){super(),this.properties={player:c.defaultPlayer,weapon:new d},this.addStaticOutput("Event",u.EVENT),this.addStaticOutput("Player",p.type.player),this.addStaticOutput("Weapon",p.type.object),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Weapon No Ammo"}get title(){return X.title}get color(){return F}onTrigger(){this.setOutputData(1,this.properties.player),this.setOutputData(2,this.properties.weapon),this.triggerSlot(0)}}u.registerNodeType("eventsInventory/OnWeaponNoAmmo",X);class Q extends h{constructor(){super(),this.properties={player:c.defaultPlayer,weapon:new d},this.addStaticOutput("Event",u.EVENT),this.addStaticOutput("Acquiring Player",p.type.player),this.addStaticOutput("Weapon",p.type.object),this.addStaticOutput("Weapon Position",p.type.position),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Weapon Pickup"}get title(){return Q.title}get color(){return F}onTrigger(){this.setOutputData(1,this.properties.player),this.setOutputData(2,this.properties.weapon),this.setOutputData(3,this.properties.weapon.position),this.triggerSlot(0)}}u.registerNodeType("eventsInventory/OnWeaponPickup",Q);class Y extends h{constructor(){super(),this.properties={player:c.defaultPlayer,weapon:new d},this.addStaticOutput("Event",u.EVENT),this.addStaticOutput("Acquiring Player",p.type.player),this.addStaticOutput("Weapon",p.type.object),this.addStaticOutput("Weapon Position",p.type.position),this.addStaticOutput("Is Fully Picked Up",p.type.boolean),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Weapon Refill Pickup"}get title(){return Y.title}get color(){return F}onTrigger(){this.setOutputData(1,this.properties.player),this.setOutputData(2,this.properties.weapon),this.setOutputData(3,this.properties.weapon.position),this.setOutputData(4,!this.properties.weapon.isAlive),this.triggerSlot(0)}}u.registerNodeType("eventsInventory/OnWeaponRefillPickup",Y);const tt=p.nodeColor.event;class et extends h{constructor(){super(),this._hasTriggered=!1,this.properties={player:c.defaultPlayer},this.addStaticOutput("Event",u.EVENT),this.addStaticOutput("Player",p.type.player),this.addStaticOutput("Is Crouching",p.type.boolean),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>{const t=c.defaultPlayer;t.crouch(),this.onTrigger(t)})),this.mode=u.ON_TRIGGER}static get title(){return"On Player Crouch"}get title(){return et.title}get color(){return tt}onTrigger(t){this.setOutputData(1,t),this.setOutputData(2,t.isCrouching),this.triggerSlot(0)}}u.registerNodeType("eventsPlayers/crouch",et);class it extends h{constructor(){super(),this.properties={player:c.defaultPlayer},this.addStaticOutput("Event",u.EVENT),this.addStaticOutput("Player",p.type.player),this.addStaticOutput("Team",p.type.team),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Player Exited"}get title(){return it.title}get color(){return tt}onTrigger(){this.setOutputData(1,this.properties.player),this.setOutputData(2,this.properties.player.team),this.triggerSlot(0)}}u.registerNodeType("eventsPlayers/OnPlayerExited",it);class rt extends h{constructor(){super(),this.properties={player:c.defaultPlayer},this.addStaticOutput("Event",u.EVENT),this.addStaticOutput("Player",p.type.player),this.addStaticOutput("Joined In Progress",p.type.boolean),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Player Joined"}get title(){return rt.title}get color(){return tt}onTrigger(){this.setOutputData(1,this.properties.player),this.setOutputData(2,!1),this.triggerSlot(0)}}u.registerNodeType("eventsPlayers/OnPlayerJoined",rt);class st extends h{constructor(){super(),this.properties={killedPlayer:c.defaultPlayer,killingPlayer:c.defaultPlayer},this.addStaticOutput("Event",u.EVENT),this.addStaticOutput("Killed Player",p.type.player),this.addStaticOutput("Killing Player",p.type.boolean),this.addStaticOutput("Death Context",p.type.deathContext),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Player Killed"}get title(){return st.title}get color(){return tt}onTrigger(){this.setOutputData(1,this.properties.player),this.setOutputData(2,this.properties.player),this.setOutputData(3,""),this.triggerSlot(0)}}u.registerNodeType("eventsPlayers/OnPlayerKilled",st);class nt extends h{constructor(){super(),this.properties={player:c.defaultPlayer,mark:new d},this.properties.mark.targetList=[],this.addStaticOutput("Event",u.EVENT),this.addStaticOutput("Player",p.type.player),this.addStaticOutput("Callout Position",p.type.position),this.addStaticOutput("Target List",p.type.objects),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Player Mark"}get title(){return nt.title}get color(){return tt}onTrigger(){this.setOutputData(1,this.properties.player),this.setOutputData(2,this.properties.mark.position),this.setOutputData(3,this.properties.mark.targetList),this.triggerSlot(0)}}u.registerNodeType("eventsPlayers/OnPlayerMark",nt);class at extends h{constructor(){super(),this.properties={player:c.defaultPlayer},this.addStaticOutput("Event",u.EVENT),this.addStaticOutput("Player",p.type.player),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Player Spawned"}get title(){return at.title}get color(){return tt}onTrigger(){this.setOutputData(1,this.properties.player),this.triggerSlot(0)}}u.registerNodeType("eventsPlayers/OnPlayerSpawned",at);class ot extends h{constructor(){super(),this.properties={player:c.defaultPlayer},this.addStaticOutput("Event",u.EVENT),this.addStaticOutput("Player",p.type.player),this.addStaticOutput("Old Team",p.type.team),this.addStaticOutput("New Team",p.type.team),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Player Team Change"}get title(){return ot.title}get color(){return tt}onTrigger(){this.setOutputData(1,this.properties.player),this.setOutputData(2,this.properties.player.team),this.setOutputData(3,this.properties.player.team),this.triggerSlot(0)}}u.registerNodeType("eventsPlayers/OnPlayerTeamChange",ot);class ut extends h{constructor(){super(),this.addStaticInput("Death Context",p.type.deathContext),this.addStaticOutput("Was Assisted Kill",p.type.boolean),this.addStaticOutput("Assisting Players",p.type.players)}static get title(){return"Was Assisted Kill"}get title(){return ut.title}get color(){return tt}onExecute(){const t=this.getInputData(0);t&&(this.setOutputData(0,!(!Array.isArray(t?.assistants)||!t.assistants.length)),this.setOutputData(1,t?.assistants??[]))}}u.registerNodeType("eventsPlayers/WasAssistedKill",ut);class pt extends h{constructor(){super(),this.addStaticInput("Death Context",p.type.deathContext),this.addStaticOutput("Was Grenade Kill",p.type.boolean)}static get title(){return"Was Grenade Kill"}get title(){return pt.title}get color(){return tt}onExecute(){this.getInputData(0)&&this.setOutputData(0,!1)}}u.registerNodeType("eventsPlayers/WasGrenadeKill",pt);class dt extends h{constructor(){super(),this.addStaticInput("Death Context",p.type.deathContext),this.addStaticOutput("Was Melee Kill",p.type.boolean),this.addStaticOutput("Was Backsmack",p.type.boolean)}static get title(){return"Was Melee Kill"}get title(){return dt.title}get color(){return tt}onExecute(){this.getInputData(0)&&(this.setOutputData(0,!1),this.setOutputData(1,!1))}}u.registerNodeType("eventsPlayers/WasMeleeKill",dt);class lt extends h{constructor(){super(),this.addStaticInput("Death Context",p.type.deathContext),this.addStaticOutput("Was Weapon Kill",p.type.boolean),this.addStaticOutput("Was Headshot",p.type.boolean)}static get title(){return"Was Weapon Kill"}get title(){return lt.title}get color(){return tt}onExecute(){this.getInputData(0)&&(this.setOutputData(0,!1),this.setOutputData(1,!1))}}u.registerNodeType("eventsPlayers/WasWeaponKill",lt);class ct extends h{constructor(){super(),this.addStaticInput("Death Context",p.type.deathContext),this.addStaticInput("Grenade Type",p.type.grenadeType),this.addStaticOutput("Was With Grenade Type",p.type.boolean)}static get title(){return"Was With Grenade Type"}get title(){return ct.title}get color(){return tt}onExecute(){this.getInputData(0)&&this.setOutputData(0,!1)}}u.registerNodeType("eventsPlayers/WasWithGrenadeType",ct);class ht extends h{constructor(){super(),this.addStaticInput("Death Context",p.type.deathContext),this.addStaticInput("Vehicle",p.type.object),this.addStaticOutput("Was With Specific Vehicle",p.type.boolean)}static get title(){return"Was With Specific Vehicle"}get title(){return ht.title}get color(){return tt}onExecute(){this.getInputData(0)&&this.setOutputData(0,!1)}}u.registerNodeType("eventsPlayers/WasWithSpecificVehicle",ht);class gt extends h{constructor(){super(),this.addStaticInput("Death Context",p.type.deathContext),this.addStaticInput("Weapon",p.type.object),this.addStaticOutput("Was With Specific Weapon",p.type.boolean)}static get title(){return"Was With Specific Weapon"}get title(){return gt.title}get color(){return tt}onExecute(){this.getInputData(0)&&this.setOutputData(0,!1)}}u.registerNodeType("eventsPlayers/WasWithSpecificWeapon",gt);class yt extends h{constructor(){super(),this.addStaticInput("Death Context",p.type.deathContext),this.addStaticInput("Vehicle Type",p.type.vehicleType),this.addStaticOutput("Was With Vehicle Type",p.type.boolean)}static get title(){return"Was With Vehicle Type"}get title(){return yt.title}get color(){return tt}onExecute(){this.getInputData(0)&&this.setOutputData(0,!1)}}u.registerNodeType("eventsPlayers/WasWithVehicleType",yt);class mt extends h{constructor(){super(),this.addStaticInput("Death Context",p.type.deathContext),this.addStaticInput("Weapon Type",p.type.weaponType),this.addStaticOutput("Was With Weapon Type",p.type.boolean)}static get title(){return"Was With Weapon Type"}get title(){return mt.title}get color(){return tt}onExecute(){this.getInputData(0)&&this.setOutputData(0,!1)}}u.registerNodeType("eventsPlayers/WasWithWeaponType",mt);const St=p.nodeColor.gameMode;class Et extends h{constructor(){super(),this.addStaticInput("Event",u.ACTION),this.addStaticInput("Player",p.type.player),this.addStaticInput("Score Adjustment",p.type.number),this.addStaticOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Adjust Personal Score"}get title(){return Et.title}get color(){return St}onAction(){this.triggerSlot(0)}}u.registerNodeType("gameMode/AdjustPersonalScore",Et);class Ot extends h{constructor(){super(),this.addStaticInput("Event",u.ACTION),this.addStaticInput("Team",p.type.team),this.addStaticInput("Score Adjustment",p.type.number),this.addStaticOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Adjust Team Points"}get title(){return Ot.title}get color(){return St}onAction(){this.triggerSlot(0)}}u.registerNodeType("gameMode/AdjustTeamPoints",Ot);class Tt extends h{constructor(){super(),this.addStaticInput("Event",u.ACTION),this.addStaticInput("End Game",p.type.boolean),this.addStaticOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"End Round"}get title(){return Tt.title}get color(){return St}onAction(){const t=this.getInputData(1)??this?.properties?.endGame??!1;c.endRound({endGame:t}),this.triggerSlot(0)}}u.registerNodeType("gameMode/EndRound",Tt);class vt extends h{constructor(){super(),this.addStaticInput("Event",u.ACTION),this.addStaticInput("End Game",p.type.boolean),this.addStaticOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"End Round - All Lose"}get title(){return vt.title}get color(){return St}onAction(){const t=this.getInputData(1)??this?.properties?.endGame??!1;c.endRound({endGame:t,winner:"allLose"}),this.triggerSlot(0)}}u.registerNodeType("gameMode/EndRoundAllLose",vt);class Nt extends h{constructor(){super(),this.addStaticInput("Event",u.ACTION),this.addStaticInput("End Game",p.type.boolean),this.addStaticOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"End Round - All Tie"}get title(){return Nt.title}get color(){return St}onAction(){const t=this.getInputData(1)??this?.properties?.endGame??!1;c.endRound({endGame:t,winner:"allTie"}),this.triggerSlot(0)}}u.registerNodeType("gameMode/EndRoundAllTie",Nt);class bt extends h{constructor(){super(),this.addStaticInput("Event",u.ACTION),this.addStaticInput("Player",p.type.player),this.addStaticInput("End Game",p.type.boolean),this.addStaticOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"End Round - Winning Player"}get title(){return bt.title}get color(){return St}onAction(){const t=this.getInputData(2)??this?.properties?.endGame??!1;c.endRound({endGame:t,winner:this.getInputData(1)}),this.triggerSlot(0)}}u.registerNodeType("gameMode/EndRoundWinningPlayer",bt);class It extends h{constructor(){super(),this.addStaticInput("Event",u.ACTION),this.addStaticInput("Team",p.type.team),this.addStaticInput("End Game",p.type.boolean),this.addStaticOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"End Round - Winning Team"}get title(){return It.title}get color(){return St}onAction(){const t=this.getInputData(2)??this?.properties?.endGame??!1;c.endRound({endGame:t,winner:this.getInputData(1)}),this.triggerSlot(0)}}u.registerNodeType("gameMode/EndRoundWinningTeam",It);class ft extends h{constructor(){super(),this.addStaticOutput("Current Round",p.type.number)}static get title(){return"Get Current Round"}get title(){return ft.title}get color(){return St}onExecute(){this.setOutputData(0,c.roundNumber)}}u.registerNodeType("gameMode/GetCurrentRound",ft);class xt extends h{constructor(){super(),this.addStaticOutput("Current Round",p.type.number)}static get title(){return"Get Max Rounds"}get title(){return xt.title}get color(){return St}onExecute(){this.setOutputData(0,c.maxRounds)}}u.registerNodeType("gameMode/GetMaxRounds",xt);class Dt extends h{constructor(){super(),this.addStaticInput("Player",p.type.player),this.addStaticOutput("Total Score",p.type.number),this.addStaticOutput("Round Score",p.type.number)}static get title(){return"Get Personal Score"}get title(){return Dt.title}get color(){return St}onExecute(){const t=this.getInputData(0);t&&(this.setOutputData(0,c.getPersonalScoreTotal(t)),this.setOutputData(1,c.getPersonalScoreRound(t)))}}u.registerNodeType("gameMode/GetPersonalScore",Dt);class At extends h{constructor(){super(),this.addStaticInput("Player",p.type.player),this.addStaticOutput("Total Score",p.type.number),this.addStaticOutput("Round Score",p.type.number)}static get title(){return"Get Player Points"}get title(){return At.title}get color(){return St}onExecute(){const t=this.getInputData(0);t&&(this.setOutputData(0,c.getPlayerPointsTotal(t)),this.setOutputData(1,c.getPlayerPointsRound(t)))}}u.registerNodeType("gameMode/GetPlayerPoints",At);class Pt extends h{constructor(){super(),this.addStaticOutput("Score To Win",p.type.number)}static get title(){return"Get Points To Win"}get title(){return Pt.title}get color(){return St}onExecute(){this.setOutputData(0,c.pointsToWin)}}u.registerNodeType("gameMode/GetPointsToWin",Pt);class wt extends h{constructor(){super(),this.addStaticOutput("Seconds Remaining",p.type.number)}static get title(){return"Get Round Time"}get title(){return wt.title}get color(){return St}onExecute(){this.setOutputData(0,c.roundSecondsRemaining)}}u.registerNodeType("gameMode/GetRoundTime",wt);class _t extends h{constructor(){super(),this.addStaticInput("Team",p.type.team),this.addStaticOutput("Total Score",p.type.number),this.addStaticOutput("Round Score",p.type.number)}static get title(){return"Get Team Points"}get title(){return _t.title}get color(){return St}onExecute(){const t=this.getInputData(0);t&&(this.setOutputData(0,c.getTeamPointsTotal(t)),this.setOutputData(1,c.getTeamPointsRound(t)))}}u.registerNodeType("gameMode/GetTeamPoints",_t);class Ct extends h{constructor(){super(),this.addStaticInput("Event",u.ACTION),this.addStaticInput("Score To Win",p.type.number),this.addStaticOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Set Points To Win"}get title(){return Ct.title}get color(){return St}onAction(){const t=this.getInputData(1);t&&(c.setScoreToWin(t),this.triggerSlot(0))}}u.registerNodeType("gameMode/SetPointsToWin",Ct);class Gt extends h{constructor(){super(),this.addStaticInput("Event",u.ACTION),this.addStaticInput("Seconds Remaining",p.type.number),this.addStaticOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Set Round Time"}get title(){return Gt.title}get color(){return St}onAction(){const t=this.getInputData(1);t&&(c.setRemainingTime(t),this.triggerSlot(0))}}u.registerNodeType("gameMode/SetRoundTime",Gt);const Wt=p.nodeColor.inventory;class Rt extends h{constructor(){super(),this.addStaticInput("Event",u.ACTION),this.addStaticInput("Player",p.type.player),this.addStaticInput("Refill Percent",p.type.percent),this.addStaticOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Add Player Ammo - Equipped"}get title(){return Rt.title}get color(){return Wt}onAction(){this.getInputData(1)??this?.properties?.percent;this.triggerSlot(0)}}u.registerNodeType("inventory/AddPlayerAmmoEquipped",Rt);class Vt extends h{constructor(){super(),this.addStaticInput("Event",u.ACTION),this.addStaticInput("Player",p.type.player),this.addStaticInput("Refill Percent",p.type.percent),this.addStaticOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Add Player Ammo - Unequipped"}get title(){return Vt.title}get color(){return Wt}onAction(){this.getInputData(1)??this?.properties?.percent;this.triggerSlot(0)}}u.registerNodeType("inventory/AddPlayerAmmoUnequipped",Vt);class Mt extends h{constructor(){super(),this.addStaticInput("Weapon A",p.type.weapon),this.addStaticInput("Weapon B",p.type.weapon),this.addStaticOutput("Are Same Base Weapon Type",p.type.boolean),this.addStaticOutput("Are Same Weapon Type",p.type.boolean)}static get title(){return"Are Same Weapon Type"}get title(){return Mt.title}get color(){return Wt}onExecute(){this.setOutputData(0,!1),this.setOutputData(1,!1)}}u.registerNodeType("inventory/AreSameWeaponType",Mt);class jt extends h{constructor(){super(),this.addStaticInput("Event",u.ACTION),this.addStaticInput("Player",p.type.player),this.addStaticInput("Weapon",p.type.weapon),this.addStaticOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Drop Specific Weapon"}get title(){return jt.title}get color(){return Wt}onAction(){this.triggerSlot(0)}}u.registerNodeType("inventory/DropSpecificWeapon",jt);class qt extends h{constructor(){super(),this.addStaticInput("Event",u.ACTION),this.addStaticInput("Player",p.type.player),this.addStaticInput("Weapon Type",p.type.weaponType),this.addStaticOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Drop Weapon of Type"}get title(){return qt.title}get color(){return Wt}onAction(){this.triggerSlot(0)}}u.registerNodeType("inventory/DropWeaponOfType",qt);class Bt extends h{constructor(){super(),this.addStaticInput("Event",u.ACTION),this.addStaticInput("Player",p.type.player),this.addStaticOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Empty Player Ammo"}get title(){return Bt.title}get color(){return Wt}onAction(){this.triggerSlot(0)}}u.registerNodeType("inventory/EmptyPlayerAmmo",Bt);class Lt extends h{constructor(){super(),this.addStaticInput("Player",p.type.player),this.addStaticInput("Weapon",p.type.weapon),this.addStaticOutput("Is Holding Specific Weapon",p.type.boolean)}static get title(){return"Get Is Holding Specific Weapon"}get title(){return Lt.title}get color(){return Wt}onExecute(){this.setOutputData(0,!1)}}u.registerNodeType("inventory/GetIsHoldingSpecificWeapon",Lt);class kt extends h{constructor(){super(),this.addStaticInput("Player",p.type.player),this.addStaticInput("Weapon Type",p.type.weaponType),this.addStaticOutput("Is Holding Weapon Type",p.type.boolean)}static get title(){return"Get Is Holding Weapon Type"}get title(){return kt.title}get color(){return Wt}onExecute(){this.setOutputData(0,!1)}}u.registerNodeType("inventory/GetIsHoldingWeaponType",kt);class Ft extends h{constructor(){super(),this.addStaticInput("Player",p.type.player),this.addStaticOutput("Equipped Weapon",p.type.weapon),this.addStaticOutput("Unequipped Weapon",p.type.weapon)}static get title(){return"Get Player Weapons"}get title(){return Ft.title}get color(){return Wt}onExecute(){const t=this.getInputData(0);t&&t.isPlayer&&(this.setOutputData(0,t.equippedWeapon),this.setOutputData(1,t.unEquippedWeapon))}}u.registerNodeType("inventory/GetPlayerWeapons",Ft);class $t extends h{constructor(){super(),this.addStaticInput("Weapon",p.type.weapon),this.addStaticOutput("Maximum Rounds",p.type.weapon)}static get title(){return"Get Weapon Magazine Capacity"}get title(){return $t.title}get color(){return Wt}onExecute(){const t=this.getInputData(0);t&&player.isWeapon&&this.setOutputData(0,t.maximumMagazineCapacity)}}u.registerNodeType("inventory/GetWeaponMagazineCapacity",$t);class Ut extends h{constructor(){super(),this.addStaticInput("Weapon",p.type.weapon),this.addStaticOutput("Rounds",p.type.weapon)}static get title(){return"Get Weapon Magazine Rounds"}get title(){return Ut.title}get color(){return Wt}onExecute(){const t=this.getInputData(0);t&&player.isWeapon&&this.setOutputData(0,t.magazineRounds)}}u.registerNodeType("inventory/GetWeaponMagazineRounds",Ut);class Ht extends h{constructor(){super(),this.addStaticInput("Weapon",p.type.weapon),this.addStaticOutput("Weapon Type",p.type.weaponType),this.addStaticOutput("Base Weapon",p.type.weapon),this.addStaticOutput("Configuration",p.type.weaponConfiguration)}static get title(){return"Get Weapon Type"}get title(){return Ht.title}get color(){return Wt}onExecute(){const t=this.getInputData(0);t&&player.isWeapon&&(this.setOutputData(0,t.type),this.setOutputData(1,t.base),this.setOutputData(2,t.configuration))}}u.registerNodeType("inventory/GetWeaponType",Ht);class zt extends h{constructor(){super(),this.addStaticInput("Event",u.ACTION),this.addStaticInput("Player",p.type.player),this.addStaticInput("Weapon Type",p.type.weaponType),this.addStaticInput("Weapon Addition Method",p.type.weaponAdditionMethod),this.addStaticInput("Wait Until Completion",p.type.boolean),this.addStaticOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Give Player New Weapon"}get title(){return zt.title}get color(){return Wt}onAction(){this.triggerSlot(0)}}u.registerNodeType("inventory/GivePlayerNewWeapon",zt);class Jt extends h{constructor(){super(),this.addStaticInput("Event",u.ACTION),this.addStaticInput("Player",p.type.player),this.addStaticInput("Weapon",p.type.weapon),this.addStaticInput("Weapon Addition Method",p.type.weaponAdditionMethod),this.addStaticInput("Wait Until Completion",p.type.boolean),this.addStaticOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Give Player Specific Weapon"}get title(){return Jt.title}get color(){return Wt}onAction(){this.triggerSlot(0)}}u.registerNodeType("inventory/GivePlayerSpecificWeapon",Jt);class Kt extends h{constructor(){super(),this.addStaticInput("Event",u.ACTION),this.addStaticInput("Player",p.type.player),this.addStaticOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Refill Player Ammo"}get title(){return Kt.title}get color(){return Wt}onAction(){this.triggerSlot(0)}}u.registerNodeType("inventory/RefillPlayerAmmo",Kt);class Zt extends h{constructor(){super(),this.addStaticInput("Event",u.ACTION),this.addStaticInput("Player",p.type.player),this.addStaticInput("Enabled",p.type.boolean),this.addStaticOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Set Player Weapon Lowered"}get title(){return Zt.title}get color(){return Wt}onAction(){this.triggerSlot(0)}}u.registerNodeType("inventory/SetPlayerWeaponLowered",Zt);class Xt extends h{constructor(){super(),this.addStaticInput("Event",u.ACTION),this.addStaticInput("Weapon",p.type.weapon),this.addStaticInput("Rounds",p.type.number),this.addStaticOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Set Weapon Magazine Ammo"}get title(){return Xt.title}get color(){return Wt}onAction(){this.triggerSlot(0)}}u.registerNodeType("inventory/SetWeaponMagazineAmmo",Xt);class Qt extends h{constructor(){super(),this.addStaticInput("Event",u.ACTION),this.addStaticInput("Weapon",p.type.weapon),this.addStaticInput("Percent",p.type.percent),this.addStaticOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Set Weapon Reserve Ammo"}get title(){return Qt.title}get color(){return Wt}onAction(){this.triggerSlot(0)}}u.registerNodeType("inventory/SetWeaponReserveAmmo",Qt);class Yt extends h{constructor(){super(),this.addStaticInput("Event",u.ACTION),this.addStaticInput("Weapon",p.type.weapon),this.addStaticInput("Rounds",p.type.number),this.addStaticOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Set Weapon Total Rounds"}get title(){return Yt.title}get color(){return Wt}onAction(){this.triggerSlot(0)}}u.registerNodeType("inventory/SetWeaponTotalRounds",Yt);class te extends h{constructor(){super(),this.addStaticInput("Event",u.ACTION),this.addStaticInput("Player",p.type.player),this.addStaticInput("Weapon Type",p.type.weaponType),this.addStaticOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Switch To First Weapon Of Type"}get title(){return te.title}get color(){return Wt}onAction(){this.triggerSlot(0)}}u.registerNodeType("inventory/SwitchToFirstWeaponOfType",te);const ee=p.nodeColor.inventory;class ie extends h{constructor(){super(),this.addStaticInput("Event",u.ACTION),this.addStaticInput("Player",p.type.player),this.addStaticInput("Charge Count",p.type.number),this.addStaticOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Adjust Player Equipment Charges"}get title(){return ie.title}get color(){return ee}onAction(){this.triggerSlot(0)}}u.registerNodeType("inventoryEquipment/AdjustPlayerEquipmentCharges",ie);class re extends h{constructor(){super(),this.addStaticInput("Event",u.ACTION),this.addStaticInput("Player",p.type.player),this.addStaticInput("Grenade Type",p.type.grenadeType),this.addStaticInput("Grenade Count",p.type.number),this.addStaticOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Adjust Player Grenades"}get title(){return re.title}get color(){return ee}onAction(){this.triggerSlot(0)}}u.registerNodeType("inventoryEquipment/AdjustPlayerGrenades",re);class se extends h{constructor(){super(),this.addStaticInput("Equipment A",p.type.equipment),this.addStaticInput("Equipment B",p.type.equipment),this.addStaticOutput("Are Same Equipment Type",p.type.boolean)}static get title(){return"Are Same Equipment Type"}get title(){return se.title}get color(){return ee}onExecute(){this.setOutputData(0,!1)}}u.registerNodeType("inventory/AreSameEquipmentType",se);class ne extends h{constructor(){super(),this.addStaticInput("Event",u.ACTION),this.addStaticInput("Player",p.type.player),this.addStaticOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Empty Player Equipment"}get title(){return ne.title}get color(){return ee}onAction(){this.triggerSlot(0)}}u.registerNodeType("inventoryEquipment/EmptyPlayerEquipment",ne);class ae extends h{constructor(){super(),this.addStaticInput("Event",u.ACTION),this.addStaticInput("Player",p.type.player),this.addStaticOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Empty Player Grenades"}get title(){return ae.title}get color(){return ee}onAction(){this.triggerSlot(0)}}u.registerNodeType("inventoryEquipment/EmptyPlayerGrenades",ae);class oe extends h{constructor(){super(),this.addStaticInput("Equipment",p.type.equipment),this.addStaticOutput("Equipment Type",p.type.equipmentType),this.addStaticOutput("Is Powerup",p.type.boolean)}static get title(){return"Get Equipment Type"}get title(){return oe.title}get color(){return ee}onExecute(){const t=this.getInputData(0);t&&t.isEquipment&&(this.setOutputData(0,t.type),this.setOutputData(1,t.isPowerup))}}u.registerNodeType("inventoryEquipment/GetEquipmentType",oe);class ue extends h{constructor(){super(),this.addStaticInput("Player",p.type.player),this.addStaticOutput("Is Holding Any Equipment",p.type.boolean),this.addStaticOutput("Is Holding Powerup",p.type.boolean),this.addStaticOutput("Equipment Type",p.type.equipmentType)}static get title(){return"Get Is Holding Any Equipment"}get title(){return ue.title}get color(){return ee}onExecute(){const t=this.getInputData(0);t&&(this.setOutputData(0,!!t.equipment),this.setOutputData(1,t?.equipment?.isPowerup),this.setOutputData(2,t?.equipment?.type))}}u.registerNodeType("inventoryEquipment/GetIsHoldingAnyEquipment",ue);class pe extends h{constructor(){super(),this.addStaticInput("Player",p.type.player),this.addStaticInput("Equipment Type",p.type.equipmentType),this.addStaticOutput("Is Holding Equipment Type",p.type.boolean)}static get title(){return"Get Is Holding Equipment Type"}get title(){return pe.title}get color(){return ee}onExecute(){const t=this.getInputData(0);if(!t)return;const e=this.getInputData(1)??"";this.setOutputData(0,!(!t.equipment||t.equipment.type!==e))}}u.registerNodeType("inventoryEquipment/GetIsHoldingEquipmentType",pe);const de=p.nodeColor.logic;class le extends h{constructor(){super(),this.addStaticInput("Operand A",p.type.boolean),this.addStaticInput("Operand B",p.type.boolean),this.addStaticOutput("And",p.type.boolean),this.addStaticOutput("Or",p.type.boolean)}static get title(){return"Boolean Logic"}get title(){return le.title}get color(){return de}onExecute(){const t=this.getInputData(0),e=this.getInputData(1);this.setOutputData(0,t===e),this.setOutputData(1,t!==e)}}u.registerNodeType("logic/BooleanLogic",le);class ce extends h{constructor(){super(),this.addStaticInput("Event",u.ACTION),this.addStaticInput("Condition",p.type.boolean),this.addStaticOutput("True",u.EVENT),this.addStaticOutput("False",u.EVENT),this.mode=u.ON_TRIGGER}static get title(){return"Branch"}get title(){return ce.title}get color(){return de}onExecute(){this.getInputData(1)?this.triggerSlot(0):this.triggerSlot(1)}}u.registerNodeType("logic/Branch",ce);class he extends h{constructor(){super(),this.addStaticInput("Operand A",p.type.number),this.addStaticInput("Operand B",p.type.number),this.addStaticOutput("A == B",p.type.boolean),this.addStaticOutput("A > B",p.type.boolean),this.addStaticOutput("A < B",p.type.boolean)}static get title(){return"Compare"}get title(){return he.title}get color(){return de}onExecute(){const t=parseFloat(this.getInputData(0)??0),e=parseFloat(this.getInputData(1)??0);this.setOutputData(0,t===e),this.setOutputData(1,t>e),this.setOutputData(2,t<e)}}u.registerNodeType("logic/Compare",he);class ge extends h{constructor(){super(),this.addStaticInput("Event",u.ACTION),this.addStaticInput("Objects",p.type.objects),this.addStaticOutput("On Completion",u.EVENT),this.addStaticOutput("Execute Per Object",u.EVENT),this.addStaticOutput("Current Object",p.type.object),this.addStaticOutput("Current Iteration",p.type.number),this.mode=u.ON_EVENT}static get title(){return"For Each Object"}get title(){return ge.title}get color(){return de}onAction(){const t=this.getInputData(1);t&&Array.isArray(t)&&(t.forEach(((t,e)=>{this.setOutputData(2,t),this.setOutputData(3,e),this.triggerSlot(1)})),this.triggerSlot(0))}}u.registerNodeType("logic/ForEachObject",ge);class ye extends h{constructor(){super(),this.addStaticInput("Event",u.ACTION),this.addStaticInput("Objects",p.type.objects),this.addStaticOutput("On Completion",u.EVENT),this.addStaticOutput("Execute Per Player",u.EVENT),this.addStaticOutput("Current Player",p.type.player),this.addStaticOutput("Current Iteration",p.type.number),this.mode=u.ON_EVENT}static get title(){return"For Each Player"}get title(){return ye.title}get color(){return de}onAction(){const t=this.getInputData(1);if(t&&Array.isArray(t)){t.filter((t=>t.isPlayer)).forEach(((t,e)=>{this.setOutputData(2,t),this.setOutputData(3,e),this.triggerSlot(1)})),this.triggerSlot(0)}}}u.registerNodeType("logic/ForEachPlayer",ye);class me extends h{constructor(){super(),this.addStaticInput("Event",u.ACTION),this.addStaticInput("Iterations",p.type.number),this.addStaticOutput("On Completion",u.EVENT),this.addStaticOutput("Execute Iteration",u.EVENT),this.addStaticOutput("Current Iteration",p.type.number),this.mode=u.ON_EVENT}static get title(){return"For N Iterations"}get title(){return me.title}get color(){return de}onAction(){const t=parseInt(this.getInputData(1)??0);if(t){for(let e=0;e<t;e++)this.setOutputData(2,e),this.triggerSlot(1);this.triggerSlot(0)}}}u.registerNodeType("logic/ForNIterations",me);class Se extends h{constructor(){super(),this.addStaticOutput("Is Forge Mode",p.type.boolean)}static get title(){return"Get Is Forge Mode"}get title(){return Se.title}get color(){return de}onExecute(){this.setOutputData(0,!1)}}u.registerNodeType("logic/GetIsForgeMode",Se);class Ee extends h{constructor(){super(),this.addProperty("seconds",0),this.addStaticInput("Event",u.ACTION),this.addStaticInput("Seconds",p.type.number),this.addStaticOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Wait For N Seconds"}get title(){return Ee.title}get color(){return de}onAction(){this.isInputConnected(1)&&(this.properties.seconds=this.getInputData(1));const t=1e3*parseFloat(this.properties.seconds??.1);setTimeout((()=>{this.triggerSlot(0)}),t)}}u.registerNodeType("logic/WaitForNSeconds",Ee);class Oe extends h{constructor(){super(),this.addStaticInput("Operand A",p.type.vector),this.addStaticInput("Operand B",p.type.vector),this.addStaticOutput("Result",p.type.vector),this.color=p.nodeColor.variable}static get title(){return"Subtract Vectors"}get title(){return Oe.title}onExecute(){}}u.registerNodeType("math/subtractVectors",Oe);class Te extends h{constructor(){super(),this._value=new d,this.addStaticOutput("Object",p.type.object),this.addProperty("value",`${JSON.stringify(this._value)}`),this.color=p.nodeColor.variable}static get title(){return"Object Reference"}get title(){return Te.title}onExecute(){}}u.registerNodeType("objects/get",Te);class ve extends h{constructor(){super(),this.addStaticInput("Object",p.type.object),this.addStaticOutput("Objects",p.type.objects),this.color=p.nodeColor.object}static get title(){return"Get Objects In Prefab"}get title(){return ve.title}onExecute(){}}u.registerNodeType("objects/getInPrefab",ve);class Ne extends h{constructor(){super(),this.addStaticInput("Object",p.type.object),this.addStaticOutput("Position",p.type.vector),this.color=p.nodeColor.object}static get title(){return"Get Object Position"}get title(){return Ne.title}onExecute(){}}u.registerNodeType("objectTransforms/getPos",Ne);class be extends h{constructor(){super(),this.addStaticInput("Event",u.ACTION),this.addStaticInput("Object",p.type.object),this.addStaticInput("Position",p.type.vector),this.addStaticInput("Is Relative",p.type.boolean),this.addStaticOutput("Event",u.EVENT),this.color=p.nodeColor.object,this.mode=u.ON_TRIGGER}static get title(){return"Set Object Position"}get title(){return be.title}onExecute(){}}u.registerNodeType("objectTransforms/setPos",be);class Ie extends h{constructor(){super(),this.addStaticOutput("Players",p.type.players),this.color=p.nodeColor.object}static get title(){return"Get All Players"}get title(){return Ie.title}onExecute(){this.setOutputData(0,c.state.players)}}u.registerNodeType("players/getAll",Ie);class fe extends h{constructor(){super(),this.addStaticOutput("player",p.type.player),this.color=p.nodeColor.object}static get title(){return"Get Random Player"}get title(){return fe.title}onExecute(){this.setOutputData(0,c.randomPlayer)}}u.registerNodeType("players/getRandom",fe);class xe extends h{constructor(){super(),this.properties={duration:0},this.addStaticInput("Event",u.ACTION),this.addStaticInput("Player",p.type.object),this.addStaticInput("Duration In Seconds",p.type.number),this.addStaticInput("Message",p.type.uiMessage),this.addStaticOutput("Event",u.EVENT),this.mode=u.ON_TRIGGER,this.color=p.nodeColor.object}static get title(){return"Push Splash To Player"}get title(){return xe.title}onExecute(){}}u.registerNodeType("ui/event",xe);class De extends h{constructor(){super(),this.addStaticInput("Message Template",p.type.uiMessageTemplate),this.addStaticInput("String 1",p.type.string),this.addStaticInput("String 2",p.type.string),this.addStaticInput("Player",p.type.object),this.addStaticOutput("Message",p.type.uiMessage),this.color=p.nodeColor.object}static get title(){return"Create UI Message"}get title(){return De.title}onExecute(){}}u.registerNodeType("ui/create",De);const Ae=p.nodeColor.variable;class Pe extends h{constructor(){super(),this.properties={value:0},this.addStaticOutput("",p.type.number),this.addWidget("number","",this.properties.value,"value"),this.widgets_up=!0}static get title(){return"Number"}get title(){return Pe.title}get color(){return Ae}onExecute(){this.setOutputData(0,this.properties.value)}}u.registerNodeType("variables/Number",Pe);class we extends h{constructor(){super(),this.properties={value:""},this.addStaticOutput("String",p.type.string),this.addWidget("string","string",this.properties.value,"value"),this.widgets_up=!0}static get title(){return"String"}get title(){return we.title}get color(){return Ae}onExecute(){this.setOutputData(0,this.properties.value)}}u.registerNodeType("variables/String",we);class _e extends h{constructor(){super(),this.properties={x:0,y:0,z:0},this.addStaticInput("x",p.type.number),this.addStaticInput("y",p.type.number),this.addInput("z",p.type.number),this.addWidget("number","X",this.properties.x,"x"),this.addWidget("number","Y",this.properties.y,"y"),this.addWidget("number","Z",this.properties.z,"z"),this.widgets_up=!0,this.addStaticOutput("Vector",p.type.vector)}static get title(){return"Vector3"}get title(){return _e.title}get color(){return Ae}onExecute(){const{x:t,y:e,z:i}=this.properties;this.setOutputData(0,[t,e,i])}}u.registerNodeType("variables/Vector3",_e);class Ce extends h{constructor(){super(),this.properties={identifier:""},this.addOutput("Identifier",p.type.identifier),this.addWidget("text","Identifier",this.properties.identifier,{property:"identifier"})}static get title(){return"Identifier"}get title(){return Ce.title}get color(){return Ae}onExecute(){this.setOutputData(0,this.properties.identifier)}}u.registerNodeType("variables/Identifier",Ce);class Ge extends h{constructor(){super(),this.properties=()=>c.toString(),this.color=p.nodeColor.variable}static get title(){return"[DEBUG] Game"}get title(){return Ge.title}static get desc(){return"DEBUG ONLY: Observe the value of an output during test"}onStart(){c.messenger.emit("gameStart")}onStop(){c.reset()}}u.registerNodeType("debug/game",Ge);class We extends h{constructor(){super(),this.addStaticInput("",0,{label:""}),this.value=0,this.color=p.nodeColor.variable}static get title(){return"[DEBUG] Watch"}get title(){return We.title}static get desc(){return"DEBUG ONLY: Observe the value of an output during test"}onExecute(){this.inputs[0]&&(this.value=this.getInputData(0))}toString(t){if(null==t)return"null";if(t.constructor===Number)return t.toFixed(3);if(t.constructor===Array){for(var e="[",i=0;i<t.length;++i)e+=this.toString(t[i])+(i+1!=t.length?",":"");return e+="]"}return`${t}`}onDrawBackground(t){this.inputs[0].label=this.toString(this.value)}}u.registerNodeType("debug/watch",We);i(5588),i(3836);class Re extends r.w{init(){this.forgeNodes();const t=this.recoverLastSession();this.graph=new u.LGraph(t),this.graphCanvas=new u.LGraphCanvas(this.renderCanvas(),this.graph,{autoresize:!0}),this.graphCanvas.render_shadows=!1,this.graphCanvas.default_connection_color={input_off:"#555",input_on:"#FFF",output_off:"#555",output_on:"#FFF"},this.graphCanvas.default_connection_color_byType={number:"#7F7",string:"#77F",boolean:"#F77",[u.EVENT]:"#FFF"},this.graphCanvas.default_connection_color_byTypeOff={number:"#474",string:"#447",boolean:"#744",[u.EVENT]:"#555"};const e=u.registered_node_types,i=new Map(Object.entries(e));console.log(i);const r=i.get("audio/Play3DAudioForAllPlayers");console.log(r,r.title,r.inputs),this.learn=new y({nodes:i})}get defaultState(){return{}}render(){return this.html`
		<div class="inventory_wrapper vanity_wrapper mica_viewer" id="forge">
			<button 
				class="hi-box"
				onclick=${()=>m.v.showView(this.mvarPorter.render())}
			>
				Port MVAR (experimental)
			</button>
			<header class="mica_header-strip">
				<h2>Forge Nodegraph</h2>
				${this.renderHeaderMessage()}
			</header>
			<div class="main-content" id="forge_container" onFullscreenchange=${t=>this.fullscreenChange(t)}>
				<div
					class="graph_toolbar_container"
				>
					<ul class="control_list">
						<li>
							<button
								class="graph_start hi-box"
								onclick=${()=>{this.state.graphIsLive?(this.graph.stop(),this.setState({graphIsLive:!1})):(this.graph.start(),this.setState({graphIsLive:!0}))}}
							>
								${{html:this.state.graphIsLive?'<div class="icon-masked icon-stop"></div><span>Stop</span>':'<div class="icon-masked icon-play"></div><span>Start</span>'}}
							</button>
						</li>
						<li>
							<button
								class="hi-box"
								onclick=${()=>this.graph.runStep()}
							>
								<div class="icon-masked icon-step"></div><span>Step</span>
							</button>
						</li>
						<li class="spacer">|</li>
						<li>
							<button
								class="hi-box"
								onclick=${()=>this.saveSession()}
							>
								<div class="icon-masked icon-save"></div><span>Save</span>
							</button>
						</li>
						<li>
							<button
								class="hi-box"
								onclick=${()=>m.v.showView(this.renderLoadModal())}
							>
								<div class="icon-masked icon-upload"></div><span>Load</span>
							</button>
						</li>
						<li>
							<button
								class="hi-box"
								onclick=${()=>this.offerDownload()}
							>
								<div class="icon-masked icon-download"></div><span>Download</span>
							</button>
						</li>
						<li>
							<button
								class="hi-box"
								onclick=${()=>m.v.showView(this.renderClearModal())}
							>
								<div class="icon-masked icon-trash"></div><span>Clear</span>
							</button>
						</li>
						<li class="spacer">|</li>
						<li>
							<button
								class="hi-box"
								onclick=${()=>this.fullscreen()}
							>
								<div class=${"icon-masked icon-"+(this.state.fullscreen?"minimize":"maximize")}></div><span>${this.state.fullscreen?"Exit ":""}Fullscreen</span>
							</button>
						</li>
					</ul>
				</div>
				<div
					class="graph_container"
				>${this.view}</div>
			</div>
		`}get view(){return this.state.view?.render?.()??this.renderCanvas()}get mvarPorter(){return this._mvarPorter??=new Me}renderCanvas(){return this?._canvas?this._canvas:this._canvas=n.k9.wire(this,":canvas")`
			<canvas
				id="forge-canvas"
				class="forge-canvas"
				width=${window.innerWidth}
				height=${window.innerHeight-128}
			></canvas>
		`}getSavedNodegraph(){if(!window?.localStorage)return;const t=localStorage.getItem("forge_autobak");return t||void 0}renderLoadModal(){const t=this.getSavedNodegraph();return n.k9.wire(this,":loadModal")`
			<div class="forge_load-modal">
				<div>
					<span>Saved Nodegraph</span>
					<span>${t?.date??"..."}</span>
					<button
						class="hi-box"
						onclick=${()=>{const t=this.recoverLastSession();t&&this.configureGraph(t)}}
					>
						Load
					</button>
					<button
						class="hi-box"
						onclick=${()=>localStorage.removeItem("forge_autobak")}
					>
						Clear
					</button>
				</div>
				<div>
					<span>---</span><br/>
					<label for="file-nodegraph">nodegraph.json file to load:</label><br/>
					<input
						type="file"
						id="file-nodegraph"
						onchange=${t=>this.loadFromFile(t)}
					/>
				</div>
			</div>
		`}loadFromFile(t){try{console.log("loadFromFile");const e=t.target.files[0];if(!e)throw new Error("No File!");const i=new FileReader;i.onload=t=>{const e=t.target.result;if(e){const t=JSON.parse(e);this.configureGraph(t)}},i.readAsText(e)}catch(t){this.setState({message:t?.message??"loadMvar Error!"})}}configureGraph(t){t&&this.graph.configure(t)}renderClearModal(){return n.k9.wire(this,":clearModal")`
			<div class="forge_clear-modal">
				<h2>You will lose any unsaved data. Continue?</h2>
				<button
					class="hi-box"
					onclick=${()=>this.graph.clear()}
				>Clear</button>
			</div>
		`}renderHelpModal(){return n.k9.wire(this,":helpModal")`
			<div class="forge_help-modal">
				<h2>Help</h2>
			</div>
		`}renderHeaderMessage(){return n.k9.wire(this,":headerMessage")`
			<div class="header-message">
				<span>${this.state.actionMessage??""}</span>
			</div>
		`}get messageQueue(){return this._messageQueue??=new Array}showActionMessage(t){if(t&&"string"==typeof t){if(this.messageQueue.length||this.state.actionMessage)return this.messageQueue.push(t);this.displayActionMessage(t)}}displayActionMessage(t){t&&"string"==typeof t&&(this.setState({actionMessage:t}),this.actionMessageTimeout=setTimeout((()=>{if(this.messageQueue.length){const t=this.messageQueue.shift();console.log("nextMessage",t),this.displayActionMessage(t)}else this.setState({actionMessage:""})}),5e3))}async fullscreen(){try{document.fullscreenElement&&document.exitFullscreen();const t=document.querySelector("#forge_container");if(!t)return;await t.requestFullscreen(),this.setState({fullscreen:!0})}catch(t){}}fullscreenChange(){const t=this.renderCanvas(),e=document.fullscreenElement;if(e)return t.width=e.clientWidth,t.height=e.clientHeight,this.setState({fullscreen:!0});t.width=window.innerWidth,t.height=window.innerHeight-128,this.setState({fullscreen:!1})}forgeNodes(){}offerDownload(){try{const t=JSON.stringify(this.graph.serialize()),e=new Date,i=`${e.toLocaleDateString("se-SE")}`,r=`${i}T${`${e.toLocaleTimeString("se-SE").replaceAll(":","-")}`}`,s=new Blob([t]),n=URL.createObjectURL(s),a=document.createElement("a");a.setAttribute("href",n),a.setAttribute("download",`cylix-nodegraph_${encodeURIComponent(r)}.json`),a.style.display="none",document.body.appendChild(a),a.click(),document.body.removeChild(a),setTimeout((()=>URL.revokeObjectURL(n)),6e4)}catch(t){console.error("[forge.offerDownload]",t)}}get titleMaxLength(){return 32}get session(){return this._session??={created:(new Date).toISOString(),date:(new Date).toISOString(),title:"untitled"}}set session(t){try{const e={created:(new Date).toISOString(),date:(new Date).toISOString(),title:"untitled"};t.created&&Date.parse(t.created)&&(e.created=t.created),t.date&&Date.parse(t.date)&&(e.date=t.date),t.title&&"string"==typeof t.title&&(e.title=t.title.substring(0,this.titleMaxLength))}catch(t){console.error("[forge.setSession]",t)}}recoverLastSession(){try{if(!window?.localStorage)return;const t=localStorage.getItem("forge_autobak");if(t){const e=JSON.parse(t);if(console.log("[forge.recoverLastSession] loading automatic backup from",e.date),this.showActionMessage("Recovering graph..."),Array.isArray(e?.nodegraph?.nodes)&&e?.nodegraph?.nodes?.length)return this.session=e,e.nodegraph}}catch(t){console.error("[forge.recoverLastSession]",t),this.showActionMessage("Recovery failed!")}}saveSession(){try{const t=this.graph.serialize();localStorage.setItem("forge_autobak",JSON.stringify({...this.session,nodegraph:t})),console.log(`[forge.saveSession] Saved "${this.session.title}" with "${t?.nodes?.length}" nodes!`),this.showActionMessage("Saved!")}catch(t){console.error("[forge.saveSession]",t),this.showActionMessage("Save failed!")}}saveSessionAutobak(){}}const Ve=new Re;class Me extends r.w{render(){return this.html`
			<div>
				<H2>Port MVAR</H2>
				<div>
					<label for="file-mvar">Unpacked map.mvar.xml file to load:</label><br/>
					<input
						type="file"
						id="file-mvar"
						onchange=${t=>this.loadMvar(t)}
					/>
				</div>
				<span>Filename: ${this.state.filename||"..."}</span><br/>
				<span>Map ID: [${this.state.originalMapName}] ${this.state.mapID||"..."}</span><br/>
				<span>Objects: ${this.state.foodCount}</span>
				<br/><br/>
				<div class="mvar-id-controls">
					<label for="select_map">Select Map ID:</label>
					<select
						name="select_map"
						id="select_map"
						onchange=${t=>this.changeMapID(t.target.value)}
					>
						<option value="">Unchanged</option>
						${()=>[...this.mapIDs].map((([t,e])=>this.state?.newMapID===t?`<option value=${t} selected>${e}</option>`:`<option value=${t}>${e}</option>`))}
					</select>
					<br/>
					<label for="mvar-id">Custom Map ID:</label>
					<input
						type="text"
						id="mvar-id"
						onchange=${t=>this.changeMapID(t.target.value)}
						placeholder=${this.state.newMapID}
					>
				</div>
				<br/><br/>
				<div class="mvar-offsets">
					<span>Offsets</span>
					<details>
						<summary>Help?</summary>
						<p>Offsets are added per axis to all objects in the mvar. A value of 20 for the Z offset will move the entire map up 20 units along the Z axis. To determine your desired offsets you may want to duplicate an item on the map, move it to the desired location, and subtract the old axis values from the new axis values.</p>
					</details>
					<div class="offset">
						<label for="mvar-offset-x">X:</label>
						<input
							type="number"
							id="mvar-offset-x"
							step="0.000001"
							onchange=${t=>this.changeOffset("x",t.target.value)}
						>
					</div>
					<div class="offset">
						<label for="mvar-offset-y">Y:</label>
						<input
							type="number"
							id="mvar-offset-y"
							step="0.000001"
							onchange=${t=>this.changeOffset("y",t.target.value)}
						>
					</div>
					<div class="offset">
						<label for="mvar-offset-z">Z:</label>
						<input
							type="number"
							id="mvar-offset-z"
							step="0.000001"
							onchange=${t=>this.changeOffset("z",t.target.value)}
						>
					</div>
				</div>
				<button
					class="hi-box"
					onclick=${()=>this.processMvar()}
				><div class="icon-masked icon-download"></div><span>Process</span></button>
				<br/>
				<span>${this.state.message}</span>
			</div>
		`}get defaultState(){return{message:"",xml:"",mapID:"",newMapID:"",originalMapName:"",foodCount:0,offset:{x:0,y:0,z:0},filename:""}}loadMvar(t){try{console.log("loadmvar");const e=t.target.files[0];if(!e)throw new Error("No File!");this.setState({filename:(0,S.B)(e.name)});const i=new FileReader;i.onload=t=>{const e=t.target.result;this.readMvar(e)},i.readAsText(e)}catch(t){this.setState({message:t?.message??"loadMvar Error!"})}}readMvar(t){try{if(!t||"string"!=typeof t)throw new Error("Invalid text!");const e=(new DOMParser).parseFromString(t,"application/xml");console.log(e);const i=e.querySelector("struct struct struct int32").textContent,r=this.mapIDs.has(i)?this.mapIDs.get(i):"UNK";console.log(i,r);const s=e.querySelector("struct list[id='3']")?.childNodes?.length??0;this.state.xml=t,this.state.mvar=e,this.setState({mapID:i,originalMapName:r,foodCount:s})}catch(t){this.setState({message:t?.message??"readMvar Error!"})}}changeOffset(t,e){console.log(`[MvarPorter.changeOffset] "${t}", "${e}"`),this.state.offset[t]=parseFloat(e)}changeMapID(t){if(console.log(`[MvarPorter.changeMapID] "${t}"`),t)return this.setState({newMapID:`${t}`});this.setState({newMapID:""})}processMvar(){try{if(console.log("[MvarPorter.processMvar]",JSON.stringify(this.state.offset),JSON.stringify(this.state.mapID)),!this.state.xml)throw new Error("No .mvar loaded!");this.setState({message:"Parsing XML..."});const t=(new DOMParser).parseFromString(this.state.xml,"application/xml"),e=t.querySelector("struct list[id='3']");if(this.setState({message:"Processing FOODs..."}),e.childNodes.forEach((t=>{try{if("struct"===t.nodeName){const e=t.querySelector("struct[id='3']");if(e){const t=e.querySelector("float[id='0']"),i=e.querySelector("float[id='1']"),r=e.querySelector("float[id='2']"),s=parseFloat(t.textContent),n=parseFloat(i.textContent),a=parseFloat(r.textContent);t.textContent=`${s+this.state.offset.x/10}`,i.textContent=`${n+this.state.offset.y/10}`,r.textContent=`${a+this.state.offset.z/10}`}}}catch(t){console.warn("[MvarPorter.processMvar] bad food!",t)}})),this.state.newMapID){t.querySelector("struct struct struct int32").textContent=this.state.newMapID}const i=(new XMLSerializer).serializeToString(t);this.setState({message:"Processed, now offering mvar file!"}),this.offerDownload(i)}catch(t){this.setState({message:t?.message??"processMvar Error!"})}}offerDownload(t){try{const e=new Date,i=`${e.toLocaleDateString("se-SE")}`,r=`${i}T${`${e.toLocaleTimeString("se-SE").replaceAll(":","-")}`}`,s=new Blob([t]),n=URL.createObjectURL(s),a=document.createElement("a");a.setAttribute("href",n),a.setAttribute("download",`${this.state.filename||"map"}_${encodeURIComponent(r)}.xml`),a.style.display="none",document.body.appendChild(a),a.click(),document.body.removeChild(a),setTimeout((()=>URL.revokeObjectURL(n)),6e4)}catch(t){console.error("[MvarPorter.offerDownload]",t)}}get mapIDs(){return this._mapIDs??=new Map([["1804860316","Arid"],["-747133697","Ecliptic"],["1437677928","Institute"],["88891201","Mires"],["2123870979","Seafloor"],["426470249","Void"],["-1598071734","Aquarius"],["-1449092339","Behemoth"],["847557134","Breaker"],["-1044063363","Catalyst"],["-340635692","Fragmentation"],["-2109972058","High Power"],["-738424322","Launch Site"],["1253388187","Live Fire"],["-687782121","Recharge"]])}}}}]);