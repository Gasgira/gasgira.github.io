"use strict";(self.webpackChunkcylixguide=self.webpackChunkcylixguide||[]).push([[594],{558:(t,e,r)=>{r.r(e),r.d(e,{default:()=>a});var i=r(8081),s=r.n(i),n=r(3645),o=r.n(n)()(s());o.push([t.id,'.graph_container {\r\n\t/* height: 80vh;\r\n\twidth: 100vw; */\r\n\t/* height: calc(100vh - 4rem); */\r\n\tmax-height: 90vh;\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center\r\n}\r\n\r\n.graph_container .forge-canvas {\r\n\t\t/* background-color: red; */\r\n\t\theight: 100%;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n@media all and (display-mode: fullscreen) {\r\n  .graph_container {\r\n\t\tmax-height: calc(100vh - 3rem);\r\n  }\r\n}\r\n\r\n.graph_toolbar_container {\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tbackground-color: rgba(0,0,0,0.1)\r\n}\r\n\r\n.graph_toolbar_container .control_list {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\tflex-wrap: wrap;\r\n\t\talign-items: center;\r\n\t\tpadding-left: 0.5em\r\n\t}\r\n\r\n.graph_toolbar_container .control_list .hi-box {\r\n\t\t\tmargin: 0.25em 0.2em;\r\n\t\t}\r\n\r\n.graph_toolbar_container .control_list .spacer {\r\n\t\t\tmargin: 0 0.5rem;\r\n\t\t\tpointer-events: none;\r\n\t\t}\r\n\r\n.graph_toolbar_container .control_list .graph_start {\r\n\t\t\tmin-width: 9ch;\r\n\t\t\tjustify-content: center;\r\n\t\t}\r\n\r\n.litegraph.dialog {\r\n\tposition: absolute;\r\n\ttop: 50%;\r\n\tleft: 50%;\r\n\tmargin-top: -150px;\r\n\tmargin-left: -200px;\r\n\r\n\tbackground-color: #2A2A2A;\r\n\r\n\tmin-width: 400px;\r\n\tmin-height: 200px;\r\n\tbox-shadow: 0 0 4px #111;\r\n\tborder-radius: 6px\r\n}\r\n\r\n.litegraph.dialog.settings {\r\n\t\tleft: 10px;\r\n\t\ttop: 6rem;\r\n\t\tbottom: 2rem;\r\n\t\tmargin: auto;\r\n\t}\r\n\r\n.litegraph.dialog .close{\r\n\t\tfloat: right;\r\n\t\tmargin: 4px;\r\n\t\tmargin-right: 10px;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 1.4em\r\n\t}\r\n\r\n.litegraph.dialog .close:hover {\r\n\t\t\tcolor: white;\r\n\t\t}\r\n\r\n.litegraph.dialog .dialog-header {\r\n\t\tcolor: #AAA;\r\n\t\tborder-bottom: 1px solid #161616;\r\n\t\theight: 40px\r\n\t}\r\n\r\n.litegraph.dialog .dialog-header .dialog-title {\r\n\t\t\tfont: 20px "Arial";\r\n\t\t\tmargin: 4px;\r\n\t\t\tpadding: 4px 10px;\r\n\t\t\tdisplay: inline-block;\r\n\t\t}\r\n\r\n.litegraph.dialog .dialog-footer { height: 50px; padding: 10px; border-top: 1px solid #1a1a1a;}\r\n\r\n.litegraph.dialog .dialog-content {\r\n\t\theight: calc(100% - 90px);\r\n\t\twidth: 100%;\r\n\t\tmin-height: 100px;\r\n\t\tdisplay: inline-block;\r\n\t\tcolor: #AAA\r\n\t\t/*background-color: black;*/\r\n\t}\r\n\r\n.litegraph.dialog .dialog-content h3 {\r\n\t\t\tmargin: 10px;\r\n\t\t}\r\n\r\n.litegraph.dialog .dialog-content .connections {\r\n\t\t\tflex-direction: row\r\n\t\t}\r\n\r\n.litegraph.dialog .dialog-content .connections .connections_side {\r\n\t\t\t\twidth: calc(50% - 5px);\r\n\t\t\t\tmin-height: 100px;\r\n\t\t\t\tbackground-color: black;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t}\r\n\r\n.litegraph.dialog .node_type {\r\n\t\tfont-size: 1.2em;\r\n\t\tdisplay: block;\r\n\t\tmargin: 10px;\r\n\t}\r\n\r\n.litegraph.dialog .node_desc {\r\n\t\topacity: 0.5;\r\n\t\tdisplay: block;\r\n\t\tmargin: 10px;\r\n\t}\r\n\r\n.litegraph.dialog .separator {\r\n\t\tdisplay: block;\r\n\t\twidth: calc( 100% - 4px );\r\n\t\theight: 1px;\r\n\t\tborder-top: 1px solid #000;\r\n\t\tborder-bottom: 1px solid #333;\r\n\t\tmargin: 10px 2px;\r\n\t\tpadding: 0;\r\n\t}\r\n\r\n.litegraph.dialog .property {\r\n\t\tmargin-bottom: 2px;\r\n\t\tpadding: 4px\r\n\t}\r\n\r\n.litegraph.dialog .property .property_name {\r\n\t\t\tcolor: #737373;\r\n\t\t\tdisplay: inline-block;\r\n\t\t\ttext-align: left;\r\n\t\t\tvertical-align: top;\r\n\t\t\twidth: 120px;\r\n\t\t\tpadding-left: 4px;\r\n\t\t\toverflow: hidden;\r\n\t\t}\r\n\r\n.litegraph.dialog .property .property_value {\r\n\t\t\tdisplay: inline-block;\r\n\t\t\ttext-align: right;\r\n\t\t\tcolor: #AAA;\r\n\t\t\tbackground-color: #1A1A1A;\r\n\t\t\twidth: calc( 100% - 122px );\r\n\t\t\tmax-height: 300px;\r\n\t\t\tpadding: 4px;\r\n\t\t\tpadding-right: 12px;\r\n\t\t\toverflow: hidden;\r\n\t\t\tcursor: pointer;\r\n\t\t\tborder-radius: 3px\r\n\t\t}\r\n\r\n.litegraph.dialog .property .property_value:hover {\r\n\t\t\t\tcolor: white;\r\n\t\t\t}\r\n\r\n.litegraph.dialog .property.boolean .property_value {\r\n\t\t\tpadding-right: 30px;\r\n\t\t}\r\n\r\n.litegraph.dialog .btn {\r\n\t\tborder: 0;\r\n\t\tborder-radius: 4px;\r\n\t\tpadding: 4px 20px;\r\n\t\tmargin-left: 0px;\r\n\t\tbackground-color: #060606;\r\n\t\tcolor: #8e8e8e\r\n\t}\r\n\r\n.litegraph.dialog .btn:hover {\r\n\t\t\tbackground-color: #111;\r\n\t\t\tcolor: #FFF;\r\n\t\t}\r\n\r\n.litegraph.dialog .btn.delete:hover {\r\n\t\t\tbackground-color: #F33;\r\n\t\t\tcolor: black;\r\n\t\t}',""]);const a=o},3836:(t,e,r)=>{var i=r(3379),s=r.n(i),n=r(7795),o=r.n(n),a=r(569),u=r.n(a),p=r(3565),d=r.n(p),l=r(9216),h=r.n(l),c=r(4589),g=r.n(c),y=r(558),E={};E.styleTagTransform=g(),E.setAttributes=d(),E.insert=u().bind(null,"head"),E.domAPI=o(),E.insertStyleElement=h();var T=s()(y.default,E);if(!y.default.locals||t.hot.invalidate){var O=!y.default.locals,m=O?y:y.default.locals;t.hot.accept(558,(e=>{y=r(558),function(t,e,r){if(!t&&e||t&&!e)return!1;var i;for(i in t)if((!r||"default"!==i)&&t[i]!==e[i])return!1;for(i in e)if(!(r&&"default"===i||t[i]))return!1;return!0}(m,O?y:y.default.locals,O)?(m=O?y:y.default.locals,T(y.default)):t.hot.invalidate()}))}t.hot.dispose((function(){T()}));y.default&&y.default.locals&&y.default.locals},7594:(t,e,r)=>{r.r(e),r.d(e,{Forge:()=>ve,forge:()=>Ne});var i=r(802),s=r(2165),n=r(7786),o=(r(6664),r(2842)),a=r.n(o);a().LiteGraph.allow_multi_output_for_events=!1,a().LiteGraph.node_box_coloured_by_mode=!0,a().LiteGraph.alt_drag_do_clone_nodes=!0,a().LiteGraph.release_link_on_empty_shows_menu=!0,a().LiteGraph.clearRegisteredTypes(),a().LiteGraph.NODE_TITLE_COLOR="#000",a().LiteGraph.NODE_SELECTED_TITLE_COLOR="#000",a().LiteGraph.NODE_DEFAULT_COLOR="#fff",a().LiteGraph.NODE_DEFAULT_BGCOLOR="#000",a().LiteGraph.NODE_TEXT_COLOR="#fff",a().LiteGraph.NODE_DEFAULT_BOXCOLOR="#000",a().LiteGraph.NODE_MODES_COLORS=["#fff","#aa8866","#000","#77ff77","red"];const u=a().LiteGraph,p={type:{audioZoneEffect:"audioZoneEffect",areaMonitor:"areaMonitor",boolean:"boolean",botDifficulty:"botDifficulty",deathContext:"deathContext",equipment:"equipment",equipmentType:"equipmentType",grenadeType:"grenadeType",number:"number",percent:"number",identifier:"identifier",player:"object",players:"array",position:"vec3",object:"object",objects:"array",string:"string",team:"team",uiMessage:"message",uiMessageTemplate:"messageTemplate",vector:"vec3",vehicle:"object",vehicleType:"vehicleType",weapon:"weapon",weaponType:"weaponType",weaponConfiguration:"weaponConfiguration",weaponAdditionMethod:"weaponAdditionMethod"},nodeColor:{event:"#c2dfe3",logic:"#fcfcfc",math:"#ebcfb2",object:"#d7dae5",variable:"#d4a0a7",gameMode:"#8bae9e",inventory:"#d4d6e3"},weaponTypes:new Map([]),equipmentTypes:new Map([["customEquipmentA","Custom Equipment A"]]),vehicleTypes:new Map([])};class d{constructor(t){this.properties={},t&&(this.properties={...t})}get isPlayer(){return!1}get isAlive(){return!0}get title(){return this?.properties?.title??"Object Reference"}get position(){return this._position??=[0,0,0]}get rotation(){return this._rotation??=[0,0,0]}get transform(){return{position:this.position,rotation:this.rotation}}get equipmentType(){return""}get team(){return 0}toJSON(){return{title:this.title}}toString(){return`${this.title}`}}class l extends d{constructor(t){super(),this.properties.title=t||"Player",this._crouching=!1,this._weapons=[],this._equipment=void 0}get isPlayer(){return!0}crouch(){console.log("[Player.crouch]",this),this._crouching=!this._crouching}get isCrouching(){return this?._crouching??!1}toJSON(){return`[PLAYER] ${this.title}`}toString(){return this.toJSON()}get equippedWeapon(){return this._weapons?.[0]}get unEquippedWeapon(){return this._weapons?.[1]}}const h=new class{get defaultState(){return{players:[new l("Player0")],roundNumber:1,roundTimeLimit:600,maxRounds:1,scoreLimit:50}}get state(){return this._state??={...this.defaultState}}reset(){console.log("[Game] reset"),this._state={...this.defaultState},this.messenger.clearAll(),this.customEvents.clearAll(),this.customEventsGlobal.clearAll()}get messenger(){return this._messenger??=new s.v}get customEvents(){return this._customEvents??=new s.v}get customEventsGlobal(){return this._customEventsGlobal??=new s.v}get roundStartDate(){return this.state.roundStartDate??=new Date}get roundEndDate(){return this.state.roundEndDate??=new Date(new Date(this.roundStartDate).setSeconds(this.roundStartDate.getSeconds()+this.state.roundTimeLimit))}get roundSecondsElapsed(){const t=this.roundStartDate;return(new Date-t)/1e3}get roundSecondsRemaining(){return this.state.roundTimeLimit-this.roundSecondsElapsed}setRemainingTime(t){if(t<0)return;const e=new Date,r=new Date(new Date(e).setSeconds(e.getSeconds()+t));return this.state.roundEndDate=r,this.state.roundEndDate}setScoreToWin(t){t&&(this.state.scoreLimit=parseInt(t))}getTeamPointsTotal(t){return 0}getTeamPointsRound(t){return 0}get defaultPlayer(){return this.state.players[0]??new l}get randomPlayer(){return this.state.players[0]??new l}addPlayer(){const t=this.state.players.length;t<32&&this.state.players.push(new l("Player"+(t-1)))}removePlayer(t){}getPlayerPointsTotal(t){return 0}getPlayerPointsRound(t){return 0}getPersonalScoreTotal(t){return 0}getPersonalScoreRound(t){return 0}get pointsToWin(){return 1}get roundNumber(){return this.state.roundNumber}get maxRounds(){return this.state.maxRounds}endRound({endGame:t,condition:e,winner:r}){t?this.messenger.emit("gameEnd",e,r):(this.messenger.emit("roundEnd",this.state.roundNumber),this.state.roundNumber=this.state.roundNumber+1,this.messenger.emit("roundstart",this.state.roundNumber))}toJSON(){return this.state}toString(){return JSON.stringify(this.toJSON())}};class c{static get shape(){return u.BOX_SHAPE}get color(){return this._color??"red"}set color(t){t&&"string"==typeof t&&(this._color=t)}toString(){return this.title??"Node"}toJSON(){return this.title??"Node"}}class g extends i.w{get logs(){return this._logs??=new Array}clear(){this._logs??=new Array}submit({level:t,message:e,caller:r}){this.logs.push({date:(new Date).toISOString(),level:t,message:`${e}`,caller:`${r}`})}log(t,e){void 0!==t&&void 0!==e&&this.submit({level:5,caller:t,message:e})}warn(t,e){void 0!==t&&void 0!==e&&this.submit({level:4,caller:t,message:e})}error(t,e){void 0!==t&&void 0!==e&&this.submit({level:3,caller:t,message:e})}}new g;var y=r(4136);class E extends c{constructor(){super(),this.color=p.nodeColor.event,this.properties={audio:""},this.addInput("Event",u.ACTION),this.addInput("Position",p.type.position),this.addOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Play 3D Audio For All Players"}get title(){return E.title}onAction(){console.log("[Play3DAudioForAllPlayers]",{...this.properties}),this.triggerSlot(0)}}u.registerNodeType("audio/Play3DAudioForAllPlayers",E);class T extends c{constructor(){super(),this.color=p.nodeColor.event,this.properties={audio:"",team:0},this.addInput("Event",u.ACTION),this.addInput("Team",p.type.team),this.addInput("Position",p.type.position),this.addOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Play 3D Audio For Opposing Teams"}get title(){return T.title}onAction(){console.log("[Play3DAudioForOpposingTeams]",{...this.properties}),this.triggerSlot(0)}}u.registerNodeType("audio/Play3DAudioForOpposingTeams",T);class O extends c{constructor(){super(),this.color=p.nodeColor.event,this.properties={audio:"",team:0},this.addInput("Event",u.ACTION),this.addInput("Team",p.type.team),this.addInput("Position",p.type.position),this.addOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Play 3D Audio For Team"}get title(){return O.title}onAction(){console.log("[Play3DAudioForTeam]",{...this.properties}),this.triggerSlot(0)}}u.registerNodeType("audio/Play3DAudioForTeam",O);class m extends c{constructor(){super(),this.color=p.nodeColor.event,this.addInput("Event",u.ACTION),this.addInput("Area Monitor",p.type.areaMonitor),this.addInput("Audio Zone Effect",p.type.audioZoneEffect),this.addOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Register Audio Zone"}get title(){return m.title}onAction(){console.log("[RegisterAudioZone]"),this.triggerSlot(0)}}u.registerNodeType("audio/RegisterAudioZone",m);class v extends c{constructor(){super(),this.color=p.nodeColor.event,this.addInput("Event",u.ACTION),this.addInput("Area Monitor",p.type.areaMonitor),this.addOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Unregister Audio Zone"}get title(){return v.title}onAction(){console.log("[UnregisterAudioZone]"),this.triggerSlot(0)}}u.registerNodeType("audio/UnregisterAudioZone",v);class N extends c{constructor(){super(),this.color=p.nodeColor.event,this.addInput("Event",u.ACTION),this.addInput("Object",p.type.object),this.addInput("Play For Allies",p.type.boolean),this.addOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Set Object 3D Audio Loop"}get title(){return N.title}onAction(){console.log("[SetObject3DAudioLoop]"),this.triggerSlot(0)}}u.registerNodeType("audio/SetObject3DAudioLoop",N);class b extends c{constructor(){super(),this.color=p.nodeColor.event,this.addInput("Event",u.ACTION),this.addInput("Object",p.type.object),this.addInput("Stop For Allies",p.type.boolean),this.addInput("Stop For Enemies",p.type.boolean),this.addOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Stop Object 3D Audio Loop"}get title(){return b.title}onAction(){console.log("[StopObject3DAudioLoop]"),this.triggerSlot(0)}}u.registerNodeType("audio/StopObject3DAudioLoop",b);class I extends c{constructor(){super(),this.color=p.nodeColor.event,this.properties={botDifficulty:""},this.addInput("Event",u.ACTION),this.addInput("Bot Difficulty",p.type.botDifficulty),this.addInput("Team",p.type.team),this.addOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Add Bot"}get title(){return I.title}onAction(){console.log("[AddBot]",{...this.properties}),this.triggerSlot(0)}}u.registerNodeType("bots/AddBot",I);class f extends c{constructor(){super(),this.color=p.nodeColor.event,this.properties={botDifficulty:""},this.addOutput("Bot Difficulty",p.type.botDifficulty)}static get title(){return"Bot Difficulty"}get title(){return f.title}onExecute(){}}u.registerNodeType("bots/BotDifficulty",f);class x extends c{constructor(){super(),this.color=p.nodeColor.event,this.properties={botDifficulty:""},this.addInput("Bot Player",p.type.player),this.addInput("Bot Difficulty",p.type.botDifficulty),this.addOutput("Bot Is Difficulty",p.type.boolean)}static get title(){return"Get Bot Is Difficulty"}get title(){return x.title}onExecute(){}}u.registerNodeType("bots/GetBotIsDifficulty",x);class D extends c{constructor(){super(),this.color=p.nodeColor.event,this.addInput("Event",u.ACTION),this.addOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Remove All Bots"}get title(){return D.title}onAction(){console.log("[RemoveAllBots]"),this.triggerSlot(0)}}u.registerNodeType("bots/RemoveAllBots",D);class S extends c{constructor(){super(),this.color=p.nodeColor.event,this.addInput("Event",u.ACTION),this.addInput("Bot Player",p.type.player),this.addOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Remove Specific Bot From Match"}get title(){return S.title}onAction(){console.log("[RemoveSpecificBotFromMatch]"),this.triggerSlot(0)}}u.registerNodeType("bots/RemoveSpecificBotFromMatch",S);u.registerNodeType("events/gameStart",class extends c{constructor(){super(),this.color=p.nodeColor.event,this.addOutput("Event",u.ACTION),this.triggered=!1}static get title(){return"On Game Start"}onStart(){this.triggered=!1}onStop(){this.triggered=!1}onExecute(){this.triggered||this.triggerSlot(0),this.triggered=!0}});u.registerNodeType("events/OnGameplayStart",class extends c{constructor(){super(),this.properties={roundNumber:1},this.addOutput("Event",u.ACTION),this.addOutput("Round Number",p.type.number),this.color=p.nodeColor.event,this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Gameplay Start"}onTrigger(){this.setOutputData(1,this.properties.roundNumber),this.triggerSlot(0)}});u.registerNodeType("events/OnObjectDamaged",class extends c{constructor(){super(),this.properties={damageAmount:1,attackingObject:h.defaultPlayer},this.addInput("Object",p.type.object),this.addOutput("Event",u.EVENT),this.addOutput("Attacking Object",p.type.object),this.addOutput("Damage Amount",p.type.number),this.color=p.nodeColor.event,this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Object Damaged"}onTrigger(){this.setOutputData(1,this.properties.attackingObject),this.setOutputData(2,this.properties.damageAmount),this.triggerSlot(0)}});class A extends c{constructor(){super(),this.addInput("Object",p.type.object),this.addOutput("Event",u.EVENT),this.color=p.nodeColor.event,this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Object Destroyed"}get title(){return A.title}onTrigger(){this.triggerSlot(0)}}u.registerNodeType("events/OnObjectDestroyed",A);class P extends c{constructor(){super(),this.color=p.nodeColor.event,this.addInput("Area Monitor",p.type.areaMonitor),this.addOutput("Event",u.EVENT),this.addOutput("Object",p.type.object),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Object Entered Area"}get title(){return P.title}onTrigger(){this.triggerSlot(0)}}u.registerNodeType("events/OnObjectEnteredArea",P);class _ extends c{constructor(){super(),this.color=p.nodeColor.event,this.addInput("Area Monitor",p.type.areaMonitor),this.addOutput("Event",u.EVENT),this.addOutput("Object",p.type.object),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Object Exited Area"}get title(){return _.title}onTrigger(){this.triggerSlot(0)}}u.registerNodeType("events/OnObjectExitedArea",_);class w extends c{constructor(){super(),this.color=p.nodeColor.event,this.addInput("Object",p.type.object),this.addOutput("Event",u.EVENT),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Object Spawned"}get title(){return w.title}onTrigger(){this.triggerSlot(0)}}u.registerNodeType("events/OnObjectSpawned",w);class G extends c{constructor(){super(),this.color=p.nodeColor.event,this.addOutput("Event",u.EVENT),this.addOutput("Round Number",p.type.number),h.messenger.on("roundEnd",(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Round End"}get title(){return G.title}onTrigger(){this.setOutputData(1,h.state.roundNumber),this.triggerSlot(0)}}u.registerNodeType("events/OnRoundEnd",G);class W extends c{constructor(){super(),this.color=p.nodeColor.event,this.addOutput("Event",u.EVENT),this.addOutput("Round Number",p.type.number),h.messenger.on("roundStart",(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Round Start"}get title(){return W.title}onTrigger(){this.setOutputData(1,h.state.roundNumber),this.triggerSlot(0)}}u.registerNodeType("events/OnRoundStart",W);class C extends c{constructor(){super(),this.color=p.nodeColor.event,this.properties={enteringPlayer:h.defaultPlayer,vehicle:new d({title:"Vehicle"})},this.addOutput("Event",u.EVENT),this.addOutput("Entering Player",p.type.player),this.addOutput("Vehicle",p.type.vehicle),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Vehicle Entered"}get title(){return C.title}onTrigger(){this.setOutputData(1,this.properties.enteringPlayer),this.setOutputData(2,this.properties.vehicle),this.triggerSlot(0)}}u.registerNodeType("events/OnVehicleEntered",C);class R extends c{constructor(){super(),this.color=p.nodeColor.event,this.properties={exitingPlayer:h.defaultPlayer,vehicle:new d({title:"Vehicle"})},this.addOutput("Event",u.EVENT),this.addOutput("Exiting Player",p.type.player),this.addOutput("Vehicle",p.type.vehicle),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Vehicle Exited"}get title(){return R.title}onTrigger(){this.setOutputData(1,this.properties.exitingPlayer),this.setOutputData(2,this.properties.vehicle),this.triggerSlot(0)}}u.registerNodeType("events/OnVehicleExited",R);class V extends c{constructor(){super(),this.color=p.nodeColor.event,this.properties={enteringPlayer:h.defaultPlayer,vehicle:new d({title:"Vehicle"})},this.addOutput("Event",u.EVENT),this.addOutput("Entering Player",p.type.player),this.addOutput("Vehicle",p.type.vehicle),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Vehicle Hijacked"}get title(){return V.title}onTrigger(){this.setOutputData(1,this.properties.enteringPlayer),this.setOutputData(2,this.properties.vehicle),this.triggerSlot(0)}}u.registerNodeType("events/OnVehicleHijacked",V);class j extends c{constructor(){super(),this.color=p.nodeColor.event,this.properties={evictedPlayer:h.defaultPlayer,vehicle:new d({title:"Vehicle"})},this.addOutput("Event",u.EVENT),this.addOutput("Evicted Player",p.type.player),this.addOutput("Vehicle",p.type.vehicle),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Vehicle Hijacked"}get title(){return j.title}onTrigger(){this.setOutputData(1,this.properties.evictedPlayer),this.setOutputData(2,this.properties.vehicle),this.triggerSlot(0)}}u.registerNodeType("events/OnVehicleOverturned",j);class M extends c{constructor(){super(),this.color=p.nodeColor.event,this.properties={seconds:2,initialDelay:10},this.addInput("Seconds",p.type.number),this.addInput("Initial Delay",p.type.number),this.addOutput("Event",u.EVENT),this.time=0,this.lastInterval=1,this.triggered=!1,this.delayAwaited=!(this.properties.initialDelay>0)}static get title(){return"Every N Seconds"}get title(){return M.title}onExecute(){u.allow_multi_output_for_events=!1,console.warn("events",u.allow_multi_output_for_events);const t=this.graph.elapsed_time,e=0==this.time,r=this.getInputData(0)??this.properties.seconds,i=this.getInputData(1)??this.properties.initialDelay;if(this.time+=t,this.lastInterval=r,!this.delayAwaited){if(this.time<i)return;this.delayAwaited=!0}!e&&(this.time<this.lastInterval||isNaN(this.lastInterval))||(this.triggered=!0,this.time=this.time%this.lastInterval,this.onTrigger())}onStart(){this.time=0}onTrigger(){this.triggerSlot(0)}}u.registerNodeType("eventsCustom/EveryNSeconds",M);u.registerNodeType("eventsCustom/OnCustomEquipmentUsed",class extends c{constructor(){super(),this.color=p.nodeColor.event,this.properties={player:h.defaultPlayer,equipmentType:p.equipmentTypes.get("customEquipmentA")},this.addOutput("Event",u.EVENT),this.addOutput("Activating Player",p.type.player),this.addOutput("Equipment Type",p.type.equipmentType),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Custom Equipment Used"}onTrigger(){this.setOutputData(1,this.properties.player),this.setOutputData(2,this.properties.equipmentType),this.triggerSlot(0,!0)}});class B extends c{constructor(){super(),this.color=p.nodeColor.event,this.properties={identifier:"",customEvent:void 0},this.addInput("Identifier",p.type.identifier),this.addOutput("Event",u.EVENT),this.addOutput("Object",p.type.object),this.addOutput("Number",p.type.number),this.addOutput("Object List",p.type.objects)}static get title(){return"On Custom Event"}get title(){return B.title}onExecute(){const t=this.getInputData(0)??this.properties.identifier;t?t!==this._identifier&&(this._customEvent&&h.customEvents.off(this._identifier,this._customEvent),this._identifier=t,this._customEvent=t=>{this.onTrigger(t)},h.customEvents.on(this._identifier,this._customEvent)):this._customEvent&&(h.customEvents.off(this._identifier,this._customEvent),this._customEvent=void 0,this._identifier=void 0)}onTrigger(t){this.setOutputData(1,t?.object),this.setOutputData(2,t?.number),this.setOutputData(3,t?.objectList),this.triggerSlot(0)}}u.registerNodeType("eventsCustom/OnCustomEvent",B);class k extends c{constructor(){super(),this.color=p.nodeColor.event,this.properties={identifier:""},this.addInput("Event",u.ACTION),this.addInput("Identifier",p.type.identifier),this.addInput("Object",p.type.object),this.addInput("Number",p.type.number),this.addInput("Object List",p.type.objects),this.addOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Trigger Custom Event"}get title(){return k.title}onAction(){const t=this.getInputData(1)??this.properties.identifier;if(t){const e={},r=this.getInputData(2);r&&(e.object=r);const i=this.getInputData(3);i&&(e.number=i);const s=this.getInputData(4);s&&(e.objectList=s),h.customEvents.emit(t,e),this.triggerSlot(0)}}}u.registerNodeType("eventsCustom/TriggerCustomEvent",k);const L=p.nodeColor.event;class q extends c{constructor(){super(),this.properties={player:h.defaultPlayer,equipment:new d},this.addOutput("Event",u.EVENT),this.addOutput("Acquiring Player",p.type.player),this.addOutput("Equipment Type",p.type.equipmentType),this.addOutput("Equipment Position",p.type.position),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Equipment Pickup"}get title(){return q.title}get color(){return L}onTrigger(){this.setOutputData(1,this.properties.player),this.setOutputData(2,this.properties.equipment.equipmentType),this.setOutputData(3,this.properties.equipment.position),this.triggerSlot(0)}}u.registerNodeType("eventsInventory/OnEquipmentPickup",q);class U extends c{constructor(){super(),this.properties={player:h.defaultPlayer,equipment:new d},this.addOutput("Event",u.EVENT),this.addOutput("Activating Player",p.type.player),this.addOutput("Equipment Type",p.type.equipmentType),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Equipment Used"}get title(){return U.title}get color(){return L}onTrigger(){this.setOutputData(1,this.properties.player),this.setOutputData(2,this.properties.equipment.equipmentType),this.triggerSlot(0)}}u.registerNodeType("eventsInventory/OnEquipmentUsed",U);class F extends c{constructor(){super(),this.properties={player:h.defaultPlayer,equipment:new d},this.addOutput("Event",u.EVENT),this.addOutput("Player",p.type.player),this.addOutput("Grenade Type",p.type.equipmentType),this.addOutput("Grenade Position",p.type.position),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Grenade Pickup"}get title(){return F.title}get color(){return L}onTrigger(){this.setOutputData(1,this.properties.player),this.setOutputData(2,this.properties.equipment.equipmentType),this.setOutputData(3,this.properties.equipment.position),this.triggerSlot(0)}}u.registerNodeType("eventsInventory/OnGrenadePickup",F);class $ extends c{constructor(){super(),this.properties={player:h.defaultPlayer,equipment:new d},this.addOutput("Event",u.EVENT),this.addOutput("Player",p.type.player),this.addOutput("Grenade Type",p.type.equipmentType),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Grenade Throw"}get title(){return $.title}get color(){return L}onTrigger(){this.setOutputData(1,this.properties.player),this.setOutputData(2,this.properties.equipment.equipmentType),this.triggerSlot(0)}}u.registerNodeType("eventsInventory/OnGrenadeThrow",$);class z extends c{constructor(){super(),this.properties={player:h.defaultPlayer,weapon:new d},this.addOutput("Event",u.EVENT),this.addOutput("Acquiring Player",p.type.player),this.addOutput("Weapon",p.type.object),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Weapon Added"}get title(){return z.title}get color(){return L}onTrigger(){this.setOutputData(1,this.properties.player),this.setOutputData(2,this.properties.weapon),this.triggerSlot(0)}}u.registerNodeType("eventsInventory/OnWeaponAdded",z);class H extends c{constructor(){super(),this.properties={player:h.defaultPlayer,weapon:new d},this.addOutput("Event",u.EVENT),this.addOutput("Player",p.type.player),this.addOutput("Weapon",p.type.object),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Weapon Dropped"}get title(){return H.title}get color(){return L}onTrigger(){this.setOutputData(1,this.properties.player),this.setOutputData(2,this.properties.weapon),this.triggerSlot(0)}}u.registerNodeType("eventsInventory/OnWeaponDropped",H);class K extends c{constructor(){super(),this.properties={player:h.defaultPlayer,weapon:new d},this.addOutput("Event",u.EVENT),this.addOutput("Player",p.type.player),this.addOutput("Weapon",p.type.object),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Weapon Low Ammo"}get title(){return K.title}get color(){return L}onTrigger(){this.setOutputData(1,this.properties.player),this.setOutputData(2,this.properties.weapon),this.triggerSlot(0)}}u.registerNodeType("eventsInventory/OnWeaponLowAmmo",K);class J extends c{constructor(){super(),this.properties={player:h.defaultPlayer,weapon:new d},this.addOutput("Event",u.EVENT),this.addOutput("Player",p.type.player),this.addOutput("Weapon",p.type.object),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Weapon No Ammo"}get title(){return J.title}get color(){return L}onTrigger(){this.setOutputData(1,this.properties.player),this.setOutputData(2,this.properties.weapon),this.triggerSlot(0)}}u.registerNodeType("eventsInventory/OnWeaponNoAmmo",J);class Z extends c{constructor(){super(),this.properties={player:h.defaultPlayer,weapon:new d},this.addOutput("Event",u.EVENT),this.addOutput("Acquiring Player",p.type.player),this.addOutput("Weapon",p.type.object),this.addOutput("Weapon Position",p.type.position),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Weapon Pickup"}get title(){return Z.title}get color(){return L}onTrigger(){this.setOutputData(1,this.properties.player),this.setOutputData(2,this.properties.weapon),this.setOutputData(3,this.properties.weapon.position),this.triggerSlot(0)}}u.registerNodeType("eventsInventory/OnWeaponPickup",Z);class Q extends c{constructor(){super(),this.properties={player:h.defaultPlayer,weapon:new d},this.addOutput("Event",u.EVENT),this.addOutput("Acquiring Player",p.type.player),this.addOutput("Weapon",p.type.object),this.addOutput("Weapon Position",p.type.position),this.addOutput("Is Fully Picked Up",p.type.boolean),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Weapon Refill Pickup"}get title(){return Q.title}get color(){return L}onTrigger(){this.setOutputData(1,this.properties.player),this.setOutputData(2,this.properties.weapon),this.setOutputData(3,this.properties.weapon.position),this.setOutputData(4,!this.properties.weapon.isAlive),this.triggerSlot(0)}}u.registerNodeType("eventsInventory/OnWeaponRefillPickup",Q);const Y=p.nodeColor.event;class X extends c{constructor(){super(),this._hasTriggered=!1,this.properties={player:h.defaultPlayer},this.addOutput("Event",u.EVENT),this.addOutput("Player",p.type.player),this.addOutput("Is Crouching",p.type.boolean),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>{const t=h.defaultPlayer;t.crouch(),this.onTrigger(t)})),this.mode=u.ON_TRIGGER}static get title(){return"On Player Crouch"}get title(){return X.title}get color(){return Y}onTrigger(t){this.setOutputData(1,t),this.setOutputData(2,t.isCrouching),this.triggerSlot(0)}}u.registerNodeType("eventsPlayers/crouch",X);class tt extends c{constructor(){super(),this.properties={player:h.defaultPlayer},this.addOutput("Event",u.EVENT),this.addOutput("Player",p.type.player),this.addOutput("Team",p.type.team),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Player Exited"}get title(){return tt.title}get color(){return Y}onTrigger(){this.setOutputData(1,this.properties.player),this.setOutputData(2,this.properties.player.team),this.triggerSlot(0)}}u.registerNodeType("eventsPlayers/OnPlayerExited",tt);class et extends c{constructor(){super(),this.properties={player:h.defaultPlayer},this.addOutput("Event",u.EVENT),this.addOutput("Player",p.type.player),this.addOutput("Joined In Progress",p.type.boolean),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Player Joined"}get title(){return et.title}get color(){return Y}onTrigger(){this.setOutputData(1,this.properties.player),this.setOutputData(2,!1),this.triggerSlot(0)}}u.registerNodeType("eventsPlayers/OnPlayerJoined",et);class rt extends c{constructor(){super(),this.properties={killedPlayer:h.defaultPlayer,killingPlayer:h.defaultPlayer},this.addOutput("Event",u.EVENT),this.addOutput("Killed Player",p.type.player),this.addOutput("Killing Player",p.type.boolean),this.addOutput("Death Context",p.type.deathContext),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Player Killed"}get title(){return rt.title}get color(){return Y}onTrigger(){this.setOutputData(1,this.properties.player),this.setOutputData(2,this.properties.player),this.setOutputData(3,""),this.triggerSlot(0)}}u.registerNodeType("eventsPlayers/OnPlayerKilled",rt);class it extends c{constructor(){super(),this.properties={player:h.defaultPlayer,mark:new d},this.properties.mark.targetList=[],this.addOutput("Event",u.EVENT),this.addOutput("Player",p.type.player),this.addOutput("Callout Position",p.type.position),this.addOutput("Target List",p.type.objects),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Player Mark"}get title(){return it.title}get color(){return Y}onTrigger(){this.setOutputData(1,this.properties.player),this.setOutputData(2,this.properties.mark.position),this.setOutputData(3,this.properties.mark.targetList),this.triggerSlot(0)}}u.registerNodeType("eventsPlayers/OnPlayerMark",it);class st extends c{constructor(){super(),this.properties={player:h.defaultPlayer},this.addOutput("Event",u.EVENT),this.addOutput("Player",p.type.player),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Player Spawned"}get title(){return st.title}get color(){return Y}onTrigger(){this.setOutputData(1,this.properties.player),this.triggerSlot(0)}}u.registerNodeType("eventsPlayers/OnPlayerSpawned",st);class nt extends c{constructor(){super(),this.properties={player:h.defaultPlayer},this.addOutput("Event",u.EVENT),this.addOutput("Player",p.type.player),this.addOutput("Old Team",p.type.team),this.addOutput("New Team",p.type.team),this.triggerButton=this.addWidget("button","[DEBUG] Trigger",void 0,(()=>this.onTrigger())),this.mode=u.ON_TRIGGER}static get title(){return"On Player Team Change"}get title(){return nt.title}get color(){return Y}onTrigger(){this.setOutputData(1,this.properties.player),this.setOutputData(2,this.properties.player.team),this.setOutputData(3,this.properties.player.team),this.triggerSlot(0)}}u.registerNodeType("eventsPlayers/OnPlayerTeamChange",nt);class ot extends c{constructor(){super(),this.addInput("Death Context",p.type.deathContext),this.addOutput("Was Assisted Kill",p.type.boolean),this.addOutput("Assisting Players",p.type.players)}static get title(){return"Was Assisted Kill"}get title(){return ot.title}get color(){return Y}onExecute(){const t=this.getInputData(0);t&&(this.setOutputData(0,!(!Array.isArray(t?.assistants)||!t.assistants.length)),this.setOutputData(1,t?.assistants??[]))}}u.registerNodeType("eventsPlayers/WasAssistedKill",ot);class at extends c{constructor(){super(),this.addInput("Death Context",p.type.deathContext),this.addOutput("Was Grenade Kill",p.type.boolean)}static get title(){return"Was Grenade Kill"}get title(){return at.title}get color(){return Y}onExecute(){this.getInputData(0)&&this.setOutputData(0,!1)}}u.registerNodeType("eventsPlayers/WasGrenadeKill",at);class ut extends c{constructor(){super(),this.addInput("Death Context",p.type.deathContext),this.addOutput("Was Melee Kill",p.type.boolean),this.addOutput("Was Backsmack",p.type.boolean)}static get title(){return"Was Melee Kill"}get title(){return ut.title}get color(){return Y}onExecute(){this.getInputData(0)&&(this.setOutputData(0,!1),this.setOutputData(1,!1))}}u.registerNodeType("eventsPlayers/WasMeleeKill",ut);class pt extends c{constructor(){super(),this.addInput("Death Context",p.type.deathContext),this.addOutput("Was Weapon Kill",p.type.boolean),this.addOutput("Was Headshot",p.type.boolean)}static get title(){return"Was Weapon Kill"}get title(){return pt.title}get color(){return Y}onExecute(){this.getInputData(0)&&(this.setOutputData(0,!1),this.setOutputData(1,!1))}}u.registerNodeType("eventsPlayers/WasWeaponKill",pt);class dt extends c{constructor(){super(),this.addInput("Death Context",p.type.deathContext),this.addInput("Grenade Type",p.type.grenadeType),this.addOutput("Was With Grenade Type",p.type.boolean)}static get title(){return"Was With Grenade Type"}get title(){return dt.title}get color(){return Y}onExecute(){this.getInputData(0)&&this.setOutputData(0,!1)}}u.registerNodeType("eventsPlayers/WasWithGrenadeType",dt);class lt extends c{constructor(){super(),this.addInput("Death Context",p.type.deathContext),this.addInput("Vehicle",p.type.object),this.addOutput("Was With Specific Vehicle",p.type.boolean)}static get title(){return"Was With Specific Vehicle"}get title(){return lt.title}get color(){return Y}onExecute(){this.getInputData(0)&&this.setOutputData(0,!1)}}u.registerNodeType("eventsPlayers/WasWithSpecificVehicle",lt);class ht extends c{constructor(){super(),this.addInput("Death Context",p.type.deathContext),this.addInput("Weapon",p.type.object),this.addOutput("Was With Specific Weapon",p.type.boolean)}static get title(){return"Was With Specific Weapon"}get title(){return ht.title}get color(){return Y}onExecute(){this.getInputData(0)&&this.setOutputData(0,!1)}}u.registerNodeType("eventsPlayers/WasWithSpecificWeapon",ht);class ct extends c{constructor(){super(),this.addInput("Death Context",p.type.deathContext),this.addInput("Vehicle Type",p.type.vehicleType),this.addOutput("Was With Vehicle Type",p.type.boolean)}static get title(){return"Was With Vehicle Type"}get title(){return ct.title}get color(){return Y}onExecute(){this.getInputData(0)&&this.setOutputData(0,!1)}}u.registerNodeType("eventsPlayers/WasWithVehicleType",ct);class gt extends c{constructor(){super(),this.addInput("Death Context",p.type.deathContext),this.addInput("Weapon Type",p.type.weaponType),this.addOutput("Was With Weapon Type",p.type.boolean)}static get title(){return"Was With Weapon Type"}get title(){return gt.title}get color(){return Y}onExecute(){this.getInputData(0)&&this.setOutputData(0,!1)}}u.registerNodeType("eventsPlayers/WasWithWeaponType",gt);const yt=p.nodeColor.gameMode;class Et extends c{constructor(){super(),this.addInput("Event",u.ACTION),this.addInput("Player",p.type.player),this.addInput("Score Adjustment",p.type.number),this.addOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Adjust Personal Score"}get title(){return Et.title}get color(){return yt}onAction(){this.triggerSlot(0)}}u.registerNodeType("gameMode/AdjustPersonalScore",Et);class Tt extends c{constructor(){super(),this.addInput("Event",u.ACTION),this.addInput("Team",p.type.team),this.addInput("Score Adjustment",p.type.number),this.addOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Adjust Team Points"}get title(){return Tt.title}get color(){return yt}onAction(){this.triggerSlot(0)}}u.registerNodeType("gameMode/AdjustTeamPoints",Tt);class Ot extends c{constructor(){super(),this.addInput("Event",u.ACTION),this.addInput("End Game",p.type.boolean),this.addOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"End Round"}get title(){return Ot.title}get color(){return yt}onAction(){const t=this.getInputData(1)??this?.properties?.endGame??!1;h.endRound({endGame:t}),this.triggerSlot(0)}}u.registerNodeType("gameMode/EndRound",Ot);class mt extends c{constructor(){super(),this.addInput("Event",u.ACTION),this.addInput("End Game",p.type.boolean),this.addOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"End Round - All Lose"}get title(){return mt.title}get color(){return yt}onAction(){const t=this.getInputData(1)??this?.properties?.endGame??!1;h.endRound({endGame:t,winner:"allLose"}),this.triggerSlot(0)}}u.registerNodeType("gameMode/EndRoundAllLose",mt);class vt extends c{constructor(){super(),this.addInput("Event",u.ACTION),this.addInput("End Game",p.type.boolean),this.addOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"End Round - All Tie"}get title(){return vt.title}get color(){return yt}onAction(){const t=this.getInputData(1)??this?.properties?.endGame??!1;h.endRound({endGame:t,winner:"allTie"}),this.triggerSlot(0)}}u.registerNodeType("gameMode/EndRoundAllTie",vt);class Nt extends c{constructor(){super(),this.addInput("Event",u.ACTION),this.addInput("Player",p.type.player),this.addInput("End Game",p.type.boolean),this.addOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"End Round - Winning Player"}get title(){return Nt.title}get color(){return yt}onAction(){const t=this.getInputData(2)??this?.properties?.endGame??!1;h.endRound({endGame:t,winner:this.getInputData(1)}),this.triggerSlot(0)}}u.registerNodeType("gameMode/EndRoundWinningPlayer",Nt);class bt extends c{constructor(){super(),this.addInput("Event",u.ACTION),this.addInput("Team",p.type.team),this.addInput("End Game",p.type.boolean),this.addOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"End Round - Winning Team"}get title(){return bt.title}get color(){return yt}onAction(){const t=this.getInputData(2)??this?.properties?.endGame??!1;h.endRound({endGame:t,winner:this.getInputData(1)}),this.triggerSlot(0)}}u.registerNodeType("gameMode/EndRoundWinningTeam",bt);class It extends c{constructor(){super(),this.addOutput("Current Round",p.type.number)}static get title(){return"Get Current Round"}get title(){return It.title}get color(){return yt}onExecute(){this.setOutputData(0,h.roundNumber)}}u.registerNodeType("gameMode/GetCurrentRound",It);class ft extends c{constructor(){super(),this.addOutput("Current Round",p.type.number)}static get title(){return"Get Max Rounds"}get title(){return ft.title}get color(){return yt}onExecute(){this.setOutputData(0,h.maxRounds)}}u.registerNodeType("gameMode/GetMaxRounds",ft);class xt extends c{constructor(){super(),this.addInput("Player",p.type.player),this.addOutput("Total Score",p.type.number),this.addOutput("Round Score",p.type.number)}static get title(){return"Get Personal Score"}get title(){return xt.title}get color(){return yt}onExecute(){const t=this.getInputData(0);t&&(this.setOutputData(0,h.getPersonalScoreTotal(t)),this.setOutputData(1,h.getPersonalScoreRound(t)))}}u.registerNodeType("gameMode/GetPersonalScore",xt);class Dt extends c{constructor(){super(),this.addInput("Player",p.type.player),this.addOutput("Total Score",p.type.number),this.addOutput("Round Score",p.type.number)}static get title(){return"Get Player Points"}get title(){return Dt.title}get color(){return yt}onExecute(){const t=this.getInputData(0);t&&(this.setOutputData(0,h.getPlayerPointsTotal(t)),this.setOutputData(1,h.getPlayerPointsRound(t)))}}u.registerNodeType("gameMode/GetPlayerPoints",Dt);class St extends c{constructor(){super(),this.addOutput("Score To Win",p.type.number)}static get title(){return"Get Points To Win"}get title(){return St.title}get color(){return yt}onExecute(){this.setOutputData(0,h.pointsToWin)}}u.registerNodeType("gameMode/GetPointsToWin",St);class At extends c{constructor(){super(),this.addOutput("Seconds Remaining",p.type.number)}static get title(){return"Get Round Time"}get title(){return At.title}get color(){return yt}onExecute(){this.setOutputData(0,h.roundSecondsRemaining)}}u.registerNodeType("gameMode/GetRoundTime",At);class Pt extends c{constructor(){super(),this.addInput("Team",p.type.team),this.addOutput("Total Score",p.type.number),this.addOutput("Round Score",p.type.number)}static get title(){return"Get Team Points"}get title(){return Pt.title}get color(){return yt}onExecute(){const t=this.getInputData(0);t&&(this.setOutputData(0,h.getTeamPointsTotal(t)),this.setOutputData(1,h.getTeamPointsRound(t)))}}u.registerNodeType("gameMode/GetTeamPoints",Pt);class _t extends c{constructor(){super(),this.addInput("Event",u.ACTION),this.addInput("Score To Win",p.type.number),this.addOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Set Points To Win"}get title(){return _t.title}get color(){return yt}onAction(){const t=this.getInputData(1);t&&(h.setScoreToWin(t),this.triggerSlot(0))}}u.registerNodeType("gameMode/SetPointsToWin",_t);class wt extends c{constructor(){super(),this.addInput("Event",u.ACTION),this.addInput("Seconds Remaining",p.type.number),this.addOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Set Round Time"}get title(){return wt.title}get color(){return yt}onAction(){const t=this.getInputData(1);t&&(h.setRemainingTime(t),this.triggerSlot(0))}}u.registerNodeType("gameMode/SetRoundTime",wt);const Gt=p.nodeColor.inventory;class Wt extends c{constructor(){super(),this.addInput("Event",u.ACTION),this.addInput("Player",p.type.player),this.addInput("Refill Percent",p.type.percent),this.addOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Add Player Ammo - Equipped"}get title(){return Wt.title}get color(){return Gt}onAction(){this.getInputData(1)??this?.properties?.percent;this.triggerSlot(0)}}u.registerNodeType("inventory/AddPlayerAmmoEquipped",Wt);class Ct extends c{constructor(){super(),this.addInput("Event",u.ACTION),this.addInput("Player",p.type.player),this.addInput("Refill Percent",p.type.percent),this.addOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Add Player Ammo - Unequipped"}get title(){return Ct.title}get color(){return Gt}onAction(){this.getInputData(1)??this?.properties?.percent;this.triggerSlot(0)}}u.registerNodeType("inventory/AddPlayerAmmoUnequipped",Ct);class Rt extends c{constructor(){super(),this.addInput("Weapon A",p.type.weapon),this.addInput("Weapon B",p.type.weapon),this.addOutput("Are Same Base Weapon Type",p.type.boolean),this.addOutput("Are Same Weapon Type",p.type.boolean)}static get title(){return"Are Same Weapon Type"}get title(){return Rt.title}get color(){return Gt}onExecute(){this.setOutputData(0,!1),this.setOutputData(1,!1)}}u.registerNodeType("inventory/AreSameWeaponType",Rt);class Vt extends c{constructor(){super(),this.addInput("Event",u.ACTION),this.addInput("Player",p.type.player),this.addInput("Weapon",p.type.weapon),this.addOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Drop Specific Weapon"}get title(){return Vt.title}get color(){return Gt}onAction(){this.triggerSlot(0)}}u.registerNodeType("inventory/DropSpecificWeapon",Vt);class jt extends c{constructor(){super(),this.addInput("Event",u.ACTION),this.addInput("Player",p.type.player),this.addInput("Weapon Type",p.type.weaponType),this.addOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Drop Weapon of Type"}get title(){return jt.title}get color(){return Gt}onAction(){this.triggerSlot(0)}}u.registerNodeType("inventory/DropWeaponOfType",jt);class Mt extends c{constructor(){super(),this.addInput("Event",u.ACTION),this.addInput("Player",p.type.player),this.addOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Empty Player Ammo"}get title(){return Mt.title}get color(){return Gt}onAction(){this.triggerSlot(0)}}u.registerNodeType("inventory/EmptyPlayerAmmo",Mt);class Bt extends c{constructor(){super(),this.addInput("Player",p.type.player),this.addInput("Weapon",p.type.weapon),this.addOutput("Is Holding Specific Weapon",p.type.boolean)}static get title(){return"Get Is Holding Specific Weapon"}get title(){return Bt.title}get color(){return Gt}onExecute(){this.setOutputData(0,!1)}}u.registerNodeType("inventory/GetIsHoldingSpecificWeapon",Bt);class kt extends c{constructor(){super(),this.addInput("Player",p.type.player),this.addInput("Weapon Type",p.type.weaponType),this.addOutput("Is Holding Weapon Type",p.type.boolean)}static get title(){return"Get Is Holding Weapon Type"}get title(){return kt.title}get color(){return Gt}onExecute(){this.setOutputData(0,!1)}}u.registerNodeType("inventory/GetIsHoldingWeaponType",kt);class Lt extends c{constructor(){super(),this.addInput("Player",p.type.player),this.addOutput("Equipped Weapon",p.type.weapon),this.addOutput("Unequipped Weapon",p.type.weapon)}static get title(){return"Get Player Weapons"}get title(){return Lt.title}get color(){return Gt}onExecute(){const t=this.getInputData(0);t&&t.isPlayer&&(this.setOutputData(0,t.equippedWeapon),this.setOutputData(1,t.unEquippedWeapon))}}u.registerNodeType("inventory/GetPlayerWeapons",Lt);class qt extends c{constructor(){super(),this.addInput("Weapon",p.type.weapon),this.addOutput("Maximum Rounds",p.type.weapon)}static get title(){return"Get Weapon Magazine Capacity"}get title(){return qt.title}get color(){return Gt}onExecute(){const t=this.getInputData(0);t&&player.isWeapon&&this.setOutputData(0,t.maximumMagazineCapacity)}}u.registerNodeType("inventory/GetWeaponMagazineCapacity",qt);class Ut extends c{constructor(){super(),this.addInput("Weapon",p.type.weapon),this.addOutput("Rounds",p.type.weapon)}static get title(){return"Get Weapon Magazine Rounds"}get title(){return Ut.title}get color(){return Gt}onExecute(){const t=this.getInputData(0);t&&player.isWeapon&&this.setOutputData(0,t.magazineRounds)}}u.registerNodeType("inventory/GetWeaponMagazineRounds",Ut);class Ft extends c{constructor(){super(),this.addInput("Weapon",p.type.weapon),this.addOutput("Weapon Type",p.type.weaponType),this.addOutput("Base Weapon",p.type.weapon),this.addOutput("Configuration",p.type.weaponConfiguration)}static get title(){return"Get Weapon Type"}get title(){return Ft.title}get color(){return Gt}onExecute(){const t=this.getInputData(0);t&&player.isWeapon&&(this.setOutputData(0,t.type),this.setOutputData(1,t.base),this.setOutputData(2,t.configuration))}}u.registerNodeType("inventory/GetWeaponType",Ft);class $t extends c{constructor(){super(),this.addInput("Event",u.ACTION),this.addInput("Player",p.type.player),this.addInput("Weapon Type",p.type.weaponType),this.addInput("Weapon Addition Method",p.type.weaponAdditionMethod),this.addInput("Wait Until Completion",p.type.boolean),this.addOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Give Player New Weapon"}get title(){return $t.title}get color(){return Gt}onAction(){this.triggerSlot(0)}}u.registerNodeType("inventory/GivePlayerNewWeapon",$t);class zt extends c{constructor(){super(),this.addInput("Event",u.ACTION),this.addInput("Player",p.type.player),this.addInput("Weapon",p.type.weapon),this.addInput("Weapon Addition Method",p.type.weaponAdditionMethod),this.addInput("Wait Until Completion",p.type.boolean),this.addOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Give Player Specific Weapon"}get title(){return zt.title}get color(){return Gt}onAction(){this.triggerSlot(0)}}u.registerNodeType("inventory/GivePlayerSpecificWeapon",zt);class Ht extends c{constructor(){super(),this.addInput("Event",u.ACTION),this.addInput("Player",p.type.player),this.addOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Refill Player Ammo"}get title(){return Ht.title}get color(){return Gt}onAction(){this.triggerSlot(0)}}u.registerNodeType("inventory/RefillPlayerAmmo",Ht);class Kt extends c{constructor(){super(),this.addInput("Event",u.ACTION),this.addInput("Player",p.type.player),this.addInput("Enabled",p.type.boolean),this.addOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Set Player Weapon Lowered"}get title(){return Kt.title}get color(){return Gt}onAction(){this.triggerSlot(0)}}u.registerNodeType("inventory/SetPlayerWeaponLowered",Kt);class Jt extends c{constructor(){super(),this.addInput("Event",u.ACTION),this.addInput("Weapon",p.type.weapon),this.addInput("Rounds",p.type.number),this.addOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Set Weapon Magazine Ammo"}get title(){return Jt.title}get color(){return Gt}onAction(){this.triggerSlot(0)}}u.registerNodeType("inventory/SetWeaponMagazineAmmo",Jt);class Zt extends c{constructor(){super(),this.addInput("Event",u.ACTION),this.addInput("Weapon",p.type.weapon),this.addInput("Percent",p.type.percent),this.addOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Set Weapon Reserve Ammo"}get title(){return Zt.title}get color(){return Gt}onAction(){this.triggerSlot(0)}}u.registerNodeType("inventory/SetWeaponReserveAmmo",Zt);class Qt extends c{constructor(){super(),this.addInput("Event",u.ACTION),this.addInput("Weapon",p.type.weapon),this.addInput("Rounds",p.type.number),this.addOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Set Weapon Total Rounds"}get title(){return Qt.title}get color(){return Gt}onAction(){this.triggerSlot(0)}}u.registerNodeType("inventory/SetWeaponTotalRounds",Qt);class Yt extends c{constructor(){super(),this.addInput("Event",u.ACTION),this.addInput("Player",p.type.player),this.addInput("Weapon Type",p.type.weaponType),this.addOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Switch To First Weapon Of Type"}get title(){return Yt.title}get color(){return Gt}onAction(){this.triggerSlot(0)}}u.registerNodeType("inventory/SwitchToFirstWeaponOfType",Yt);const Xt=p.nodeColor.inventory;class te extends c{constructor(){super(),this.addInput("Event",u.ACTION),this.addInput("Player",p.type.player),this.addInput("Charge Count",p.type.number),this.addOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Adjust Player Equipment Charges"}get title(){return te.title}get color(){return Xt}onAction(){this.triggerSlot(0)}}u.registerNodeType("inventoryEquipment/AdjustPlayerEquipmentCharges",te);class ee extends c{constructor(){super(),this.addInput("Event",u.ACTION),this.addInput("Player",p.type.player),this.addInput("Grenade Type",p.type.grenadeType),this.addInput("Grenade Count",p.type.number),this.addOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Adjust Player Grenades"}get title(){return ee.title}get color(){return Xt}onAction(){this.triggerSlot(0)}}u.registerNodeType("inventoryEquipment/AdjustPlayerGrenades",ee);class re extends c{constructor(){super(),this.addInput("Equipment A",p.type.equipment),this.addInput("Equipment B",p.type.equipment),this.addOutput("Are Same Equipment Type",p.type.boolean)}static get title(){return"Are Same Equipment Type"}get title(){return re.title}get color(){return Xt}onExecute(){this.setOutputData(0,!1)}}u.registerNodeType("inventory/AreSameEquipmentType",re);class ie extends c{constructor(){super(),this.addInput("Event",u.ACTION),this.addInput("Player",p.type.player),this.addOutput("Event",u.EVENT),this.mode=u.ON_EVENT}static get title(){return"Empty Player Equipment"}get title(){return ie.title}get color(){return Xt}onAction(){this.triggerSlot(0)}}u.registerNodeType("inventoryEquipment/EmptyPlayerEquipment",ie);class se extends c{constructor(){super(),this.color=p.nodeColor.logic,this.addInput("Event",u.ACTION),this.addInput("Objects",p.type.objects),this.addOutput("On Completion",u.EVENT),this.addOutput("Execute Per Player",u.EVENT),this.addOutput("Current Player",p.type.player),this.addOutput("Current Iteration",p.type.number),this.mode=u.ON_EVENT}static get title(){return"For Each Player"}get title(){return se.title}onAction(){const t=this.getInputData(1);if(t&&Array.isArray(t)){t.filter((t=>t.isPlayer)).forEach(((t,e)=>{this.setOutputData(2,t),this.setOutputData(3,e),this.triggerSlot(1)})),this.triggerSlot(0)}}}u.registerNodeType("logic/players",se);class ne extends c{constructor(){super(),this.addInput("Event",u.ACTION),this.addInput("Condition",p.type.boolean),this.addOutput("True",u.EVENT),this.addOutput("False",u.EVENT),this.mode=u.ON_TRIGGER,this.color=p.nodeColor.logic}static get title(){return"Branch"}get title(){return ne.title}onExecute(){this.getInputData(1)?this.triggerSlot(0):this.triggerSlot(1)}}u.registerNodeType("logic/basic",ne);class oe extends c{constructor(){super(),this.addInput("Operand A",p.type.vector),this.addInput("Operand B",p.type.vector),this.addOutput("Result",p.type.vector),this.color=p.nodeColor.variable}static get title(){return"Subtract Vectors"}get title(){return oe.title}onExecute(){}}u.registerNodeType("math/subtractVectors",oe);class ae extends c{constructor(){super(),this._value=new d,this.addOutput("Object",p.type.object),this.addProperty("value",`${JSON.stringify(this._value)}`),this.color=p.nodeColor.variable}static get title(){return"Object Reference"}get title(){return ae.title}onExecute(){}}u.registerNodeType("objects/get",ae);class ue extends c{constructor(){super(),this.addInput("Object",p.type.object),this.addOutput("Objects",p.type.objects),this.color=p.nodeColor.object}static get title(){return"Get Objects In Prefab"}get title(){return ue.title}onExecute(){}}u.registerNodeType("objects/getInPrefab",ue);class pe extends c{constructor(){super(),this.addInput("Object",p.type.object),this.addOutput("Position",p.type.vector),this.color=p.nodeColor.object}static get title(){return"Get Object Position"}get title(){return pe.title}onExecute(){}}u.registerNodeType("objectTransforms/getPos",pe);class de extends c{constructor(){super(),this.addInput("Event",u.ACTION),this.addInput("Object",p.type.object),this.addInput("Position",p.type.vector),this.addInput("Is Relative",p.type.boolean),this.addOutput("Event",u.EVENT),this.color=p.nodeColor.object,this.mode=u.ON_TRIGGER}static get title(){return"Set Object Position"}get title(){return de.title}onExecute(){}}u.registerNodeType("objectTransforms/setPos",de);class le extends c{constructor(){super(),this.addOutput("Players",p.type.players),this.color=p.nodeColor.object}static get title(){return"Get All Players"}get title(){return le.title}onExecute(){this.setOutputData(0,h.state.players)}}u.registerNodeType("players/getAll",le);class he extends c{constructor(){super(),this.addOutput("player",p.type.player),this.color=p.nodeColor.object}static get title(){return"Get Random Player"}get title(){return he.title}onExecute(){this.setOutputData(0,h.randomPlayer)}}u.registerNodeType("players/getRandom",he);class ce extends c{constructor(){super(),this.properties={duration:0},this.addInput("Event",u.ACTION),this.addInput("Player",p.type.object),this.addInput("Duration In Seconds",p.type.number),this.addInput("Message",p.type.uiMessage),this.addOutput("Event",u.EVENT),this.mode=u.ON_TRIGGER,this.color=p.nodeColor.object}static get title(){return"Push Splash To Player"}get title(){return ce.title}onExecute(){}}u.registerNodeType("ui/event",ce);class ge extends c{constructor(){super(),this.addInput("Message Template",p.type.uiMessageTemplate),this.addInput("String 1",p.type.string),this.addInput("String 2",p.type.string),this.addInput("Player",p.type.object),this.addOutput("Message",p.type.uiMessage),this.color=p.nodeColor.object}static get title(){return"Create UI Message"}get title(){return ge.title}onExecute(){}}u.registerNodeType("ui/create",ge);class ye extends c{constructor(){super(),this.properties={value:""},this.addOutput("String",p.type.string),this.addWidget("string","string",this.properties.value,"value"),this.widgets_up=!0,this.color=p.nodeColor.variable}static get title(){return"String"}get title(){return ye.title}onExecute(){this.setOutputData(0,this.properties.value)}}u.registerNodeType("variables/constant",ye);class Ee extends c{constructor(){super(),this.properties={x:0,y:0,z:0},this.addInput("x",p.type.number),this.addInput("y",p.type.number),this.addInput("z",p.type.number),this.addWidget("number","X",this.properties.x,"x"),this.addWidget("number","Y",this.properties.y,"y"),this.addWidget("number","Z",this.properties.z,"z"),this.widgets_up=!0,this.addOutput("Vector",p.type.vector),this.color=p.nodeColor.variable}static get title(){return"Vector3"}get title(){return Ee.title}onExecute(){const{x:t,y:e,z:r}=this.properties;this.setOutputData(0,[t,e,r])}}u.registerNodeType("variables/vector3",Ee);class Te extends c{constructor(){super(),this.color=p.nodeColor.variable,this.properties={identifier:""},this.addOutput("Identifier",p.type.identifier),this.addWidget("text","Identifier",this.properties.identifier,{property:"identifier"})}static get title(){return"Identifier"}get title(){return Te.title}onExecute(){this.setOutputData(0,this.properties.identifier)}}u.registerNodeType("variables/Identifier",Te);class Oe extends c{constructor(){super(),this.properties=()=>h.toString(),this.color=p.nodeColor.variable}static get title(){return"[DEBUG] Game"}get title(){return Oe.title}static get desc(){return"DEBUG ONLY: Observe the value of an output during test"}onStart(){h.messenger.emit("gameStart")}onStop(){h.reset()}}u.registerNodeType("debug/game",Oe);class me extends c{constructor(){super(),this.addInput("",0,{label:""}),this.value=0,this.color=p.nodeColor.variable}static get title(){return"[DEBUG] Watch"}get title(){return me.title}static get desc(){return"DEBUG ONLY: Observe the value of an output during test"}onExecute(){this.inputs[0]&&(this.value=this.getInputData(0))}toString(t){if(null==t)return"null";if(t.constructor===Number)return t.toFixed(3);if(t.constructor===Array){for(var e="[",r=0;r<t.length;++r)e+=this.toString(t[r])+(r+1!=t.length?",":"");return e+="]"}return`${t}`}onDrawBackground(t){this.inputs[0].label=this.toString(this.value)}}u.registerNodeType("debug/watch",me);r(5588),r(3836);class ve extends i.w{init(){this.forgeNodes();const t=this.recoverLastSession();this.graph=new u.LGraph(t),this.graphCanvas=new u.LGraphCanvas(this.renderCanvas(),this.graph,{autoresize:!0}),this.graphCanvas.render_shadows=!1,this.graphCanvas.default_connection_color={input_off:"#555",input_on:"#FFF",output_off:"#555",output_on:"#FFF"},this.graphCanvas.default_connection_color_byType={number:"#7F7",string:"#77F",boolean:"#F77",[u.EVENT]:"#FFF"},this.graphCanvas.default_connection_color_byTypeOff={number:"#474",string:"#447",boolean:"#744",[u.EVENT]:"#555"}}render(){return this.html`<div class="inventory_wrapper vanity_wrapper mica_viewer" id="forge">
			<header class="mica_header-strip">
				<h2>Forge Nodegraph</h2>
				${this.renderHeaderMessage()}
			</header>
			<div class="main-content" id="forge_container" onFullscreenchange=${t=>this.fullscreenChange(t)}>
				<div
					class="graph_toolbar_container"
				>
					<ul class="control_list">
						<li>
							<button
								class="graph_start hi-box"
								onclick=${()=>{this.state.graphIsLive?(this.graph.stop(),this.setState({graphIsLive:!1})):(this.graph.start(),this.setState({graphIsLive:!0}))}}
							>
								${{html:this.state.graphIsLive?'<div class="icon-masked icon-stop"></div><span>Stop</span>':'<div class="icon-masked icon-play"></div><span>Start</span>'}}
							</button>
						</li>
						<li>
							<button
								class="hi-box"
								onclick=${()=>this.graph.runStep()}
							><div class="icon-masked icon-step"></div><span>Step</span></button>
						</li>
						<li class="spacer">|</li>
						<li>
							<button
								class="hi-box"
								onclick=${()=>this.saveSession()}
							><div class="icon-masked icon-save"></div><span>Save</span></button>
						</li>
						<li>
							<button
								class="hi-box"
								onclick=${()=>y.v.showView(this.renderLoadModal())}
							><div class="icon-masked icon-upload"></div><span>Load</span></button>
						</li>
						<li>
							<button
								class="hi-box"
								onclick=${()=>this.offerDownload()}
							><div class="icon-masked icon-download"></div><span>Download</span></button>
						</li>
						<li>
							<button
								class="hi-box"
								onclick=${()=>y.v.showView(this.renderClearModal())}
							><div class="icon-masked icon-trash"></div><span>Clear</span></button>
						</li>
						<li class="spacer">|</li>
						<li>
							<button
								class="hi-box"
								onclick=${()=>this.fullscreen()}
							><div class=${"icon-masked icon-"+(this.state.fullscreen?"minimize":"maximize")}></div><span>${this.state.fullscreen?"Exit ":""}Fullscreen</span></button>
						</li>
					</ul>
				</div>
				<div
					class="graph_container"
				>${this.renderCanvas()}</div>
			</div>
		</div>`}renderCanvas(){return this?._canvas?this._canvas:this._canvas=n.k9.wire(this,":canvas")`
			<canvas
				id="forge-canvas"
				class="forge-canvas"
				width=${window.innerWidth}
				height=${window.innerHeight-128}
			></canvas>
		`}getSavedNodegraph(){if(!window?.localStorage)return;const t=localStorage.getItem("forge_autobak");return t||void 0}renderLoadModal(){const t=this.getSavedNodegraph();return n.k9.wire(this,":loadModal")`
			<div class="forge_load-modal">
				<div>
					<span>Saved Nodegraph</span>
					<span>${t?.date??"..."}</span>
					<button
						class="hi-box"
						onclick=${()=>{const t=this.recoverLastSession();t&&this.configureGraph(t)}}
					>
						Load
					</button>
					<button
						class="hi-box"
						onclick=${()=>localStorage.removeItem("forge_autobak")}
					>
						Clear
					</button>
				</div>
			</div>
		`}configureGraph(t){t&&this.graph.configure(t)}renderClearModal(){return n.k9.wire(this,":clearModal")`
			<div class="forge_clear-modal">
				<h2>You will lose any unsaved data. Continue?</h2>
				<button
					class="hi-box"
					onclick=${()=>this.graph.clear()}
				>Clear</button>
			</div>
		`}renderHelpModal(){return n.k9.wire(this,":helpModal")`
			<div class="forge_help-modal">
				<h2>Help</h2>
			</div>
		`}renderHeaderMessage(){return n.k9.wire(this,":headerMessage")`
			<div class="header-message">
				<span>${this.state.actionMessage??""}</span>
			</div>
		`}get messageQueue(){return this._messageQueue??=new Array}showActionMessage(t){if(t&&"string"==typeof t){if(this.messageQueue.length||this.state.actionMessage)return this.messageQueue.push(t);this.displayActionMessage(t)}}displayActionMessage(t){t&&"string"==typeof t&&(this.setState({actionMessage:t}),this.actionMessageTimeout=setTimeout((()=>{if(this.messageQueue.length){const t=this.messageQueue.shift();console.log("nextMessage",t),this.displayActionMessage(t)}else this.setState({actionMessage:""})}),5e3))}async fullscreen(){try{document.fullscreenElement&&document.exitFullscreen();const t=document.querySelector("#forge_container");if(!t)return;await t.requestFullscreen(),this.setState({fullscreen:!0})}catch(t){}}fullscreenChange(){const t=this.renderCanvas(),e=document.fullscreenElement;if(e)return t.width=e.clientWidth,t.height=e.clientHeight,this.setState({fullscreen:!0});t.width=window.innerWidth,t.height=window.innerHeight-128,this.setState({fullscreen:!1})}forgeNodes(){}offerDownload(){try{const t=JSON.stringify(this.graph.serialize()),e=new Date,r=`${e.toLocaleDateString("se-SE")}`,i=`${r}T${`${e.toLocaleTimeString("se-SE").replaceAll(":","-")}`}`,s=new Blob([t]),n=URL.createObjectURL(s),o=document.createElement("a");o.setAttribute("href",n),o.setAttribute("download",`cylix-nodegraph_${encodeURIComponent(i)}.json`),o.style.display="none",document.body.appendChild(o),o.click(),document.body.removeChild(o),setTimeout((()=>URL.revokeObjectURL(n)),6e4)}catch(t){console.error("[forge.offerDownload]",t)}}get titleMaxLength(){return 32}get session(){return this._session??={created:(new Date).toISOString(),date:(new Date).toISOString(),title:"untitled"}}set session(t){try{const e={created:(new Date).toISOString(),date:(new Date).toISOString(),title:"untitled"};t.created&&Date.parse(t.created)&&(e.created=t.created),t.date&&Date.parse(t.date)&&(e.date=t.date),t.title&&"string"==typeof t.title&&(e.title=t.title.substring(0,this.titleMaxLength))}catch(t){console.error("[forge.setSession]",t)}}recoverLastSession(){try{if(!window?.localStorage)return;const t=localStorage.getItem("forge_autobak");if(t){const e=JSON.parse(t);if(console.log("[forge.recoverLastSession] loading automatic backup from",e.date),this.showActionMessage("Recovering graph..."),Array.isArray(e?.nodegraph?.nodes)&&e?.nodegraph?.nodes?.length)return this.session=e,e.nodegraph}}catch(t){console.error("[forge.recoverLastSession]",t),this.showActionMessage("Recovery failed!")}}saveSession(){try{const t=this.graph.serialize();localStorage.setItem("forge_autobak",JSON.stringify({...this.session,nodegraph:t})),console.log(`[forge.saveSession] Saved "${this.session.title}" with "${t?.nodes?.length}" nodes!`),this.showActionMessage("Saved!")}catch(t){console.error("[forge.saveSession]",t),this.showActionMessage("Save failed!")}}saveSessionAutobak(){}}const Ne=new ve}}]);